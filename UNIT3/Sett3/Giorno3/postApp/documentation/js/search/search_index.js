var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/ActivePostsComponent.html",[0,0.046,1,0.569]],["body/components/ActivePostsComponent.html",[0,0.061,1,0.832,2,0.891,3,0.19,4,0.162,5,0.651,6,0.651,7,0.651,8,0.651,9,0.162,10,4.372,11,3.808,12,1.736,13,1.229,14,1.874,15,0.552,16,1.556,17,1.678,18,1.518,19,3.634,20,0.966,21,3.529,22,0.966,23,2.959,24,0.716,25,0.753,26,0.82,27,2.577,28,3.538,29,2.074,30,0.552,31,1.544,32,2.262,33,0.973,34,2.959,35,0.898,36,0.031,37,0.482,38,0.49,39,0.898,40,2.293,41,2.577,42,3.147,43,1.993,44,1.134,45,0.978,46,1.466,47,3.538,48,1.993,49,1.993,50,1.055,51,0.558,52,0.282,53,1.391,54,1.544,55,0.19,56,0.315,57,0.552,58,1.993,59,1.993,60,1.993,61,1.993,62,1.059,63,1.993,64,1.736,65,1.993,66,1.993,67,2.959,68,2.577,69,1.993,70,2.293,71,3.538,72,2.959,73,0.552,74,0.966,75,0.966,76,0.465,77,1.275,78,0.651,79,0.966,80,0.465,81,0.651,82,0.465,83,0.651,84,0.465,85,0.651,86,0.424,87,0.651,88,0.424,89,0.651,90,0.424,91,0.651,92,0.465,93,0.651,94,0.424,95,0.507,96,0.651,97,0.465,98,0.651,99,0.424,100,0.966,101,0.424,102,0.651,103,0.424,104,0.315,105,0.424,106,0.552,107,0.6,108,0.424,109,0.6,110,0.651,111,0.017,112,0.017]],["title/components/AppComponent.html",[0,0.046,80,0.623]],["body/components/AppComponent.html",[0,0.069,1,0.521,2,1.033,3,0.234,4,0.199,5,0.799,6,0.799,7,0.799,8,0.799,9,0.199,13,1.425,14,2.105,15,0.678,16,1.601,17,1.729,18,0.799,20,1.12,22,1.12,24,0.387,25,0.873,26,0.95,29,2.282,30,0.678,33,0.924,35,0.623,36,0.031,37,0.473,38,0.431,39,0.623,45,0.678,46,1.425,50,0.8,51,0.543,52,0.346,55,0.234,56,0.387,57,0.678,73,0.678,74,1.12,75,1.12,76,0.57,77,1.403,78,0.799,79,1.12,80,1.002,81,0.799,82,0.57,83,0.799,84,0.57,85,0.799,86,0.521,87,0.799,88,0.521,89,0.799,90,0.521,91,0.799,92,0.57,93,0.799,94,0.521,95,0.623,96,0.799,97,0.57,98,0.799,99,0.521,100,1.12,101,0.521,102,0.799,103,0.521,104,0.387,105,0.521,106,0.678,107,0.736,108,0.521,109,0.736,110,0.799,111,0.019,112,0.019,113,2.447,114,2.395,115,4.739,116,4.103,117,3.963,118,1.551,119,2.099,120,4.103,121,2.175,122,2.926,123,1.417,124,1.417,125,1.3,126,2.989,127,2.926,128,2.926]],["title/modules/AppModule.html",[129,2.328,130,2.071]],["body/modules/AppModule.html",[0,0.081,1,0.896,3,0.154,4,0.131,9,0.131,11,1.406,36,0.032,44,0.619,51,0.817,52,0.228,55,0.154,56,0.255,73,0.447,80,1.104,82,0.588,84,0.939,86,0.896,88,0.896,90,0.896,92,0.939,94,0.896,97,0.939,99,0.927,101,0.896,103,0.896,105,0.896,106,0.447,108,0.858,111,0.014,112,0.014,129,1.406,130,4.161,131,1.406,132,1.251,133,3.1,134,3.1,135,3.1,136,1.614,137,1.614,138,1.614,139,1.614,140,1.614,141,2.81,142,2.81,143,2.52,144,1.614,145,1.406,146,1.406,147,3.013,148,3.013,149,1.614,150,1.406,151,2.195,152,1.93,153,0.789,154,3.013,155,3.013,156,1.127,157,3.013,158,3.013,159,1.127,160,1.93,161,1.93,162,1.93,163,1.93,164,3.013,165,1.93,166,1.406,167,3.013,168,1.406,169,1.93,170,1.93,171,1.93,172,1.93,173,1.93,174,1.93,175,1.406,176,3.013,177,1.93,178,1.406,179,1.93,180,1.93,181,1.93,182,2.935,183,1.93,184,1.93,185,1.406,186,1.93,187,1.127,188,1.406,189,4.659,190,1.614,191,3.507,192,1.614,193,1.614,194,1.614,195,1.406,196,1.614,197,1.127,198,0.935,199,1.93,200,1.93,201,1.93,202,1.93,203,1.93,204,1.251]],["title/interfaces/AuthData.html",[205,1.306,206,1.865]],["body/interfaces/AuthData.html",[3,0.351,4,0.299,9,0.299,24,0.582,25,1.141,36,0.03,37,0.405,38,0.632,44,1.41,55,0.351,104,0.796,111,0.025,112,0.025,123,3.041,205,1.796,206,3.129,207,2.566,208,3.203,209,3.677,210,6.021,211,4.483,212,2.129]],["title/guards/AuthGuard.html",[182,1.865,213,2.328]],["body/guards/AuthGuard.html",[3,0.264,4,0.224,9,0.224,13,1.147,24,0.437,26,1.033,30,0.765,33,0.869,35,0.949,36,0.032,37,0.411,38,0.468,39,0.949,45,0.765,51,0.747,52,0.391,55,0.264,56,0.437,57,0.765,104,0.437,111,0.021,112,0.021,114,1.927,118,1.75,119,2.209,121,2.364,151,3.248,153,1.349,182,2.603,191,4.114,204,2.139,214,3.301,215,2.761,216,2.881,217,3.301,218,3.301,219,5.407,220,5.049,221,5.407,222,3.301,223,4.222,224,4.459,225,3.729,226,5.049,227,1.822,228,2.139,229,2.139,230,2.761,231,3.301,232,2.405,233,2.139,234,1.466,235,2.677,236,2.761,237,2.761,238,3.301,239,3.301,240,3.301,241,3.301,242,2.761,243,3.301,244,3.301,245,3.301,246,3.301]],["title/injectables/AuthService.html",[119,1.306,227,1.306]],["body/injectables/AuthService.html",[3,0.166,4,0.141,9,0.141,24,0.275,25,0.679,26,0.739,30,0.481,33,1.123,35,1,36,0.032,37,0.433,38,0.56,39,1,45,1.149,46,1.348,51,0.723,52,0.246,55,0.166,56,0.275,57,0.481,62,2.087,95,1,104,0.656,111,0.015,112,0.015,114,1.212,119,1.303,123,1.544,124,2.276,125,1.934,153,0.848,156,1.212,187,2.542,197,2.266,198,2.109,206,2.742,211,2.667,212,1.544,216,2.501,227,1.303,228,1.346,232,1.513,233,1.346,234,2.294,235,2.738,242,1.737,247,1.346,248,1.737,249,2.515,250,3.882,251,3.882,252,3.882,253,3.189,254,3.189,255,3.642,256,4.355,257,3.189,258,1.513,259,3.173,260,3.189,261,2.323,262,3.189,263,2.076,264,3.189,265,2.076,266,2.076,267,3.189,268,2.076,269,2.076,270,2.076,271,3.189,272,2.076,273,2.323,274,2.076,275,3.189,276,2.076,277,3.882,278,2.076,279,3.189,280,2.076,281,2.076,282,1.212,283,1.513,284,2.076,285,2.076,286,2.076,287,2.076,288,2.076,289,1.737,290,1.737,291,1.737,292,2.076,293,2.076,294,2.076,295,2.076,296,1.737,297,2.066,298,2.076,299,2.076,300,3.189,301,2.076,302,2.076,303,2.076,304,2.076,305,2.076,306,2.076,307,2.076,308,2.076,309,2.076,310,2.076,311,2.076,312,1.737,313,3.189,314,2.076,315,2.076,316,2.076,317,2.076,318,2.076,319,2.076,320,2.076,321,3.189,322,2.076,323,2.076,324,2.076,325,2.076,326,2.076,327,2.076,328,2.076,329,2.076,330,3.882,331,2.076,332,2.076,333,3.189,334,2.076,335,2.076,336,4.355,337,2.076,338,2.076,339,2.076,340,2.076,341,1.006,342,1.346,343,2.076,344,2.076,345,2.076]],["title/pipes/EllipsisPipe.html",[141,1.865,346,2.071]],["body/pipes/EllipsisPipe.html",[3,0.339,4,0.289,9,0.289,13,1.476,15,0.984,26,0.984,33,0.828,35,0.904,36,0.031,37,0.525,38,0.446,39,0.904,45,0.984,51,0.562,52,0.503,55,0.339,56,0.562,111,0.025,112,0.025,123,2.96,125,1.887,141,3.064,235,2.252,346,3.401,347,4.248,348,3.553,349,4.39,350,4.248,351,5.249,352,4.248,353,5.249,354,4.248,355,4.248]],["title/components/Error404Component.html",[0,0.046,82,0.623]],["body/components/Error404Component.html",[0,0.073,1,0.594,2,1.13,3,0.266,4,0.227,5,0.911,6,0.911,7,0.911,8,0.911,9,0.227,15,0.773,16,1.627,17,1.759,18,0.911,20,1.226,22,1.226,36,0.03,37,0.468,50,0.876,51,0.441,52,0.395,55,0.266,56,0.441,73,0.773,74,1.226,75,1.226,76,0.651,77,1.483,78,0.911,79,1.226,80,0.651,81,0.911,82,1.059,83,0.911,84,0.651,85,0.911,86,0.594,87,0.911,88,0.594,89,0.911,90,0.594,91,0.911,92,0.651,93,0.911,94,0.594,95,0.71,96,0.911,97,0.651,98,0.911,99,0.594,100,1.226,101,0.594,102,0.911,103,0.594,104,0.441,105,0.594,106,0.773,107,0.84,108,0.594,109,0.84,110,0.911,111,0.021,112,0.021,341,2.175,342,2.91,356,2.79,357,4.491,358,5.076,359,4.491,360,4.491]],["title/components/HeaderComponent.html",[0,0.046,84,0.623]],["body/components/HeaderComponent.html",[0,0.073,1,0.591,2,1.126,3,0.265,4,0.226,5,0.906,6,0.906,7,0.906,8,0.906,9,0.226,15,0.769,16,1.626,17,1.757,18,0.906,19,3.26,20,1.222,22,1.222,36,0.03,37,0.467,50,0.873,51,0.439,52,0.393,55,0.265,56,0.439,73,0.769,74,1.222,75,1.222,76,0.647,77,1.48,78,0.906,79,1.222,80,0.647,81,0.906,82,0.647,83,0.906,84,1.057,85,0.906,86,0.591,87,0.906,88,0.591,89,0.906,90,0.591,91,0.906,92,0.647,93,0.906,94,0.591,95,0.706,96,0.906,97,0.647,98,0.906,99,0.591,100,1.222,101,0.591,102,0.906,103,0.591,104,0.439,105,0.591,106,0.769,107,0.835,108,0.591,109,0.835,110,0.906,111,0.021,112,0.021,361,2.776,362,5.062,363,5.062,364,4.475,365,3.319,366,3.319]],["title/directives/HighlightDirective.html",[76,0.623,108,0.569]],["body/directives/HighlightDirective.html",[3,0.339,4,0.289,9,0.289,15,0.984,16,1.321,30,0.984,33,0.828,35,0.904,36,0.031,37,0.392,38,0.446,39,0.904,51,0.562,52,0.503,55,0.339,56,0.562,57,0.984,76,1.024,107,1.069,108,0.935,109,1.321,111,0.025,112,0.025,234,1.887,367,3.553,368,4.248,369,5.949,370,5.696,371,5.949,372,4.248,373,5.249,374,4.248,375,4.248,376,4.248]],["title/components/HomeComponent.html",[0,0.046,86,0.569]],["body/components/HomeComponent.html",[0,0.071,1,0.563,2,1.089,3,0.252,4,0.215,5,0.863,6,0.863,7,0.863,8,0.863,9,0.215,15,0.732,16,1.617,17,1.747,18,0.863,20,1.182,22,1.182,36,0.03,37,0.455,50,1.168,51,0.418,52,0.374,55,0.252,56,0.418,70,3.441,73,0.732,74,1.182,75,1.182,76,0.616,77,1.45,78,0.863,79,1.182,80,0.616,81,0.863,82,0.616,83,0.863,84,0.616,85,0.863,86,0.946,87,0.863,88,0.563,89,0.863,90,0.563,91,0.863,92,0.616,93,0.863,94,0.563,95,0.673,96,0.863,97,0.616,98,0.863,99,0.563,100,1.182,101,0.563,102,0.863,103,0.563,104,0.418,105,0.563,106,0.732,107,0.795,108,0.563,109,0.795,110,0.863,111,0.021,112,0.021,341,2.096,377,2.643,378,3.62,379,4.937,380,4.329,381,3.62,382,4.329,383,4.329,384,5.31,385,5.31]],["title/components/InactivePostsComponent.html",[0,0.046,88,0.569]],["body/components/InactivePostsComponent.html",[0,0.061,1,0.426,2,0.893,3,0.191,4,0.163,5,0.653,6,0.653,7,0.653,8,0.653,9,0.163,12,1.743,14,1.063,15,0.554,16,1.557,17,1.679,18,0.653,19,3.64,20,0.969,21,3.537,22,0.969,23,2.967,24,0.717,25,0.755,26,0.822,27,2.585,29,2.078,30,0.554,31,1.55,32,2.266,33,0.974,34,2.967,35,0.9,36,0.031,37,0.482,38,0.491,39,0.9,40,2.299,41,2.585,42,3.149,43,2.001,44,1.138,45,0.98,46,1.469,48,2.001,49,2.001,50,1.057,51,0.559,52,0.283,53,1.396,54,1.55,55,0.191,56,0.316,57,0.554,58,2.001,59,2.001,60,2.001,61,2.001,62,1.063,63,2.001,64,1.743,66,2.001,67,2.967,68,2.585,69,2.001,70,2.299,72,2.967,73,0.554,74,0.969,75,0.969,76,0.466,77,1.278,78,0.653,79,0.969,80,0.466,81,0.653,82,0.466,83,0.653,84,0.466,85,0.653,86,0.426,87,0.653,88,0.833,89,1.52,90,0.426,91,0.653,92,0.466,93,0.653,94,0.426,95,0.509,96,0.653,97,0.466,98,0.653,99,0.426,100,0.969,101,0.426,102,0.653,103,0.426,104,0.316,105,0.426,106,0.554,107,0.602,108,0.426,109,0.602,110,0.653,111,0.017,112,0.017,166,3.813,204,1.55,341,1.718,386,4.378,387,3.548,388,3.548,389,3.548]],["title/components/LoginComponent.html",[0,0.046,90,0.569]],["body/components/LoginComponent.html",[0,0.067,1,0.496,2,0.997,3,0.222,4,0.189,5,0.76,6,0.76,7,0.76,8,0.76,9,0.189,15,0.645,16,1.591,17,1.717,18,0.76,20,1.082,22,1.082,24,0.368,26,0.918,30,0.645,33,0.772,35,0.843,36,0.031,37,0.489,38,0.416,39,0.843,45,0.645,46,0.967,50,0.772,51,0.665,52,0.329,55,0.222,56,0.368,57,0.645,73,0.645,74,1.082,75,1.082,76,0.543,77,1.372,78,0.76,79,1.082,80,0.543,81,0.76,82,0.543,83,0.76,84,0.543,85,0.76,86,0.496,87,0.76,88,0.496,89,0.76,90,0.895,91,0.76,92,0.543,93,0.76,94,0.496,95,0.592,96,0.76,97,0.543,98,0.76,99,0.496,100,1.082,101,0.496,102,0.76,103,0.496,104,0.368,105,0.496,106,0.645,107,0.701,108,0.496,109,0.701,110,0.76,111,0.019,112,0.019,118,1.476,119,2.052,121,2.1,153,1.137,159,1.625,197,3.22,212,1.918,216,2.749,229,1.804,234,1.236,297,2.567,390,2.328,391,4.611,392,3.961,393,2.783,394,3.961,395,3.66,396,2.783,397,2.028,398,2.328,399,2.328,400,2.783,401,2.328,402,2.328,403,2.328,404,2.328,405,3.961]],["title/components/NavbarComponent.html",[0,0.046,92,0.623]],["body/components/NavbarComponent.html",[0,0.064,1,0.456,2,0.939,3,0.205,4,0.174,5,0.7,6,0.7,7,0.7,8,0.7,9,0.174,13,1.296,14,1.955,15,0.594,16,1.573,17,1.697,18,0.7,20,1.019,22,1.019,24,0.339,25,0.794,26,0.865,29,2.148,30,0.594,33,0.943,35,0.545,36,0.031,37,0.446,38,0.392,39,0.545,45,0.865,46,1.529,50,1.107,51,0.582,52,0.303,55,0.205,56,0.339,57,0.594,70,3.133,73,0.594,74,1.019,75,1.019,76,0.5,77,1.32,78,0.7,79,1.019,80,0.5,81,0.7,82,0.5,83,0.7,84,0.5,85,0.7,86,0.456,87,0.7,88,0.456,89,0.7,90,0.456,91,0.7,92,0.943,93,0.7,94,0.456,95,0.545,96,0.7,97,0.5,98,0.7,99,0.456,100,1.019,101,0.456,102,0.7,103,0.456,104,0.68,105,0.456,106,0.594,107,0.645,108,0.456,109,0.645,110,0.7,111,0.018,112,0.018,118,1.358,119,1.976,121,1.979,126,2.719,197,2.178,206,2.569,208,1.867,255,4.486,289,2.143,341,1.807,378,3.121,381,3.121,406,2.143,407,3.732,408,4.402,409,3.732,410,3.732,411,2.562,412,2.562,413,3.732,414,2.562,415,2.562,416,2.143,417,2.562,418,3.732,419,3.732,420,3.732,421,3.121,422,3.732,423,3.732]],["title/components/NewPostComponent.html",[0,0.046,94,0.569]],["body/components/NewPostComponent.html",[0,0.061,1,0.429,2,0.898,3,0.192,4,0.164,5,0.658,6,0.658,7,0.658,8,0.658,9,0.164,13,1.239,14,1.887,15,0.558,16,1.559,17,1.681,18,0.658,20,0.974,22,0.974,24,0.319,25,0.759,26,0.827,29,2.086,30,0.558,31,1.562,32,2.274,33,0.916,35,0.759,36,0.031,37,0.462,38,0.446,39,0.759,40,2.312,45,0.827,46,1.476,50,0.978,51,0.694,52,0.285,53,1.407,54,1.562,55,0.192,56,0.319,57,0.558,62,1.071,73,0.558,74,0.974,75,0.974,76,0.47,77,1.282,78,0.658,79,0.974,80,0.47,81,0.658,82,0.47,83,0.658,84,0.47,85,0.658,86,0.429,87,0.658,88,0.429,89,0.658,90,0.429,91,0.658,92,0.47,93,0.658,94,0.837,95,1.187,96,0.658,97,0.47,98,0.658,99,0.429,100,0.974,101,0.429,102,0.658,103,0.429,104,0.319,105,0.429,106,0.558,107,0.607,108,0.429,109,0.607,110,0.658,111,0.017,112,0.017,124,1.167,125,1.071,153,0.985,159,1.407,185,3.652,216,2.631,234,1.585,395,3.421,397,1.756,401,2.016,424,4.192,425,2.016,426,4.248,427,3.568,428,4.248,429,3.568,430,3.095,431,2.49,432,3.568,433,2.41,434,3.568,435,2.41,436,1.756,437,2.016,438,2.41,439,2.41,440,3.568,441,3.568,442,3.568,443,2.599,444,3.568]],["title/interfaces/Post.html",[50,0.623,205,1.306]],["body/interfaces/Post.html",[3,0.342,4,0.291,9,0.291,24,0.566,25,1.122,36,0.03,38,0.626,42,3.306,44,1.912,50,1.028,55,0.342,64,4.344,111,0.025,112,0.025,117,4.987,123,2.767,205,1.747,207,2.496,225,4.778,445,3.577,446,5.963]],["title/components/PostCardComponent.html",[0,0.046,97,0.623]],["body/components/PostCardComponent.html",[0,0.067,1,0.505,2,1.01,3,0.226,4,0.193,5,0.774,6,0.774,7,0.774,8,0.774,9,0.193,15,0.656,16,1.595,17,1.722,18,1.095,20,1.095,22,1.095,24,0.375,33,0.553,36,0.031,37,0.429,38,0.298,44,1.286,50,1.25,51,0.531,52,0.335,53,1.654,55,0.226,56,0.375,73,0.656,74,1.095,75,1.095,76,0.553,77,1.383,78,0.774,79,1.095,80,0.553,81,0.774,82,0.553,83,0.774,84,0.553,85,0.774,86,0.505,87,0.774,88,0.505,89,1.095,90,0.505,91,0.774,92,0.553,93,0.774,94,0.505,95,0.603,96,0.774,97,0.988,98,0.774,99,0.505,100,1.095,101,0.505,102,0.774,103,0.505,104,0.375,105,0.505,106,0.656,107,0.713,108,0.505,109,0.713,110,0.774,111,0.019,112,0.019,168,2.922,296,4.235,349,3.355,447,2.922,448,2.37,449,4.011,450,4.657,451,4.011,452,4.011,453,2.833,454,4.011,455,2.833,456,2.833,457,2.833,458,2.833,459,2.833,460,2.833,461,2.833,462,2.833,463,2.833,464,2.833,465,2.833,466,2.833,467,2.833,468,3.355,469,3.355]],["title/components/PostDetailsComponent.html",[0,0.046,99,0.569]],["body/components/PostDetailsComponent.html",[0,0.063,1,0.446,2,0.923,3,0.2,4,0.17,5,0.683,6,0.683,7,0.683,8,0.683,9,0.17,13,1.274,14,1.928,15,0.579,16,1.567,17,1.691,18,0.683,20,1.001,22,1.001,24,0.331,25,0.78,26,0.849,29,2.124,30,0.579,31,1.621,32,2.315,33,0.847,35,0.532,36,0.031,37,0.441,38,0.385,39,0.532,40,2.376,44,0.802,45,0.579,46,1.274,50,1.244,51,0.632,52,0.296,53,1.46,54,1.621,55,0.2,56,0.331,57,0.579,62,1.111,73,0.579,74,1.001,75,1.001,76,0.488,77,1.305,78,0.683,79,1.001,80,0.488,81,0.683,82,0.488,83,0.683,84,0.488,85,0.683,86,0.446,87,0.683,88,0.446,89,0.683,90,0.446,91,0.683,92,0.488,93,0.683,94,0.446,95,0.532,96,0.683,97,0.488,98,0.683,99,0.852,100,1.001,101,0.446,102,0.683,103,0.446,104,0.331,105,0.446,106,0.579,107,0.63,108,0.446,109,0.63,110,0.683,111,0.017,112,0.017,153,1.022,178,3.483,187,1.46,216,2.102,234,1.111,341,2.315,342,2.376,447,3.483,468,3.067,469,3.067,470,1.822,471,3.067,472,3.631,473,3.067,474,3.998,475,3.067,476,2.092,477,2.092,478,2.092,479,2.501,480,2.501,481,3.667,482,4.781]],["title/injectables/PostService.html",[32,1.548,227,1.306]],["body/injectables/PostService.html",[3,0.242,4,0.206,9,0.206,24,0.401,25,0.895,26,0.974,27,3.064,30,0.702,32,2.037,33,1.134,35,1.166,36,0.031,37,0.505,38,0.575,39,1.166,41,3.064,42,3.191,44,1.548,45,1.269,50,1.017,51,0.69,52,0.359,55,0.242,56,0.401,57,0.702,62,2.519,111,0.02,112,0.02,114,1.769,124,1.468,125,1.346,156,1.769,195,3.064,227,1.718,233,1.964,235,2.905,247,1.964,249,3.129,258,2.208,259,3.8,261,3.064,273,3.064,282,1.769,283,2.208,483,2.535,484,4.206,485,5.216,486,4.206,487,4.206,488,3.031,489,4.206,490,3.031,491,3.031,492,4.206,493,3.031,494,4.206,495,4.829,496,3.031,497,3.031,498,3.031,499,3.031,500,3.031,501,3.031,502,3.031]],["title/interfaces/Register.html",[198,1.548,205,1.306]],["body/interfaces/Register.html",[3,0.352,4,0.3,9,0.3,24,0.584,25,1.143,36,0.03,37,0.556,38,0.608,55,0.352,111,0.026,112,0.026,123,3.132,198,2.602,205,1.802,207,2.575,212,2.919,297,3.906,503,3.69]],["title/components/RegisterComponent.html",[0,0.046,101,0.569]],["body/components/RegisterComponent.html",[0,0.066,1,0.491,2,0.991,3,0.22,4,0.188,5,0.753,6,0.753,7,0.753,8,0.753,9,0.188,15,0.639,16,1.589,17,1.715,18,0.753,20,1.075,22,1.075,24,0.365,26,0.912,30,0.639,33,0.768,35,0.838,36,0.031,37,0.488,38,0.413,39,0.838,45,0.639,46,0.958,50,0.768,51,0.662,52,0.327,55,0.22,56,0.365,57,0.639,73,0.639,74,1.075,75,1.075,76,0.538,77,1.366,78,0.753,79,1.075,80,0.538,81,0.753,82,0.538,83,0.753,84,0.538,85,0.753,86,0.491,87,0.753,88,0.491,89,0.753,90,0.491,91,0.753,92,0.538,93,0.753,94,0.491,95,0.587,96,0.753,97,0.538,98,0.753,99,0.491,100,1.075,101,0.891,102,0.753,103,0.491,104,0.365,105,0.491,106,0.639,107,0.694,108,0.491,109,0.694,110,0.753,111,0.019,112,0.019,118,1.463,119,2.044,121,2.087,153,1.127,159,1.61,198,1.906,212,1.906,216,2.742,229,1.788,234,1.226,297,2.551,312,2.307,395,3.645,397,2.01,398,2.307,399,2.307,402,2.307,403,2.307,404,2.307,421,4.185,504,2.307,505,4.589,506,3.936,507,3.936,508,2.759,509,3.936,510,2.759,511,2.759,512,3.936,513,3.936]],["title/interceptors/TokenInterceptor.html",[142,1.865,514,2.673]],["body/interceptors/TokenInterceptor.html",[3,0.277,4,0.236,9,0.236,13,1.207,24,0.46,26,1.069,30,0.805,33,0.9,35,0.982,36,0.032,37,0.425,38,0.484,39,0.982,45,0.805,51,0.76,52,0.411,55,0.277,56,0.46,57,0.805,104,0.46,111,0.022,112,0.022,118,1.842,119,2.255,121,2.446,142,2.693,156,2.028,187,2.028,223,4.332,227,1.885,228,2.251,229,2.251,230,2.906,232,2.531,235,2.746,236,2.906,237,2.906,515,3.474,516,2.906,517,5.18,518,3.474,519,3.474,520,5.519,521,5.18,522,5.519,523,3.474,524,4.614,525,3.474,526,4.614,527,3.474,528,3.474,529,3.474,530,3.474,531,3.474,532,3.474,533,3.474,534,3.474,535,3.474,536,3.474,537,3.474]],["title/interfaces/User.html",[104,0.423,205,1.306]],["body/interfaces/User.html",[3,0.335,4,0.285,9,0.285,24,0.554,25,1.108,36,0.031,37,0.546,38,0.622,42,3.002,44,1.899,55,0.335,104,0.805,111,0.025,112,0.025,123,3.006,205,1.712,207,2.447,212,2.868,538,3.505,539,5.921,540,5.662]],["title/components/UserDetailsComponent.html",[0,0.046,103,0.569]],["body/components/UserDetailsComponent.html",[0,0.063,1,0.45,2,0.93,3,0.202,4,0.172,5,0.69,6,0.69,7,0.69,8,0.69,9,0.172,13,1.283,14,1.939,15,0.585,16,1.57,17,1.693,18,0.69,20,1.009,22,1.009,24,0.334,25,0.786,26,0.856,29,2.134,30,0.585,33,0.851,35,0.538,36,0.031,37,0.443,38,0.388,39,0.538,44,0.81,45,0.585,46,1.283,50,0.72,51,0.635,52,0.299,55,0.202,56,0.334,57,0.585,62,1.122,73,0.585,74,1.009,75,1.009,76,0.493,77,1.312,78,0.69,79,1.009,80,0.493,81,0.69,82,0.493,83,0.69,84,0.493,85,0.69,86,0.45,87,0.69,88,0.45,89,0.69,90,0.45,91,0.69,92,0.493,93,0.69,94,0.45,95,0.538,96,0.69,97,0.493,98,0.69,99,0.45,100,1.009,101,0.45,102,0.69,103,0.856,104,0.809,105,0.45,106,0.585,107,0.636,108,0.45,109,0.636,110,0.69,111,0.018,112,0.018,153,1.032,175,3.499,187,1.475,212,1.789,216,2.115,234,1.122,341,1.789,342,2.393,416,2.113,430,2.691,431,2.547,436,1.841,443,2.691,470,1.841,471,3.089,472,3.651,473,3.089,474,4.017,475,3.089,476,2.113,477,2.113,478,2.113,541,4.017,542,2.113,543,2.113,544,2.526,545,3.694,546,3.694,547,3.694,548,3.694]],["title/injectables/UserService.html",[227,1.306,431,1.694]],["body/injectables/UserService.html",[3,0.292,4,0.249,9,0.249,24,0.484,25,1.015,26,1.105,30,0.847,33,1.098,35,1.015,36,0.031,37,0.44,38,0.501,39,1.015,42,2.816,44,1.172,45,1.105,51,0.745,52,0.433,55,0.292,56,0.484,57,0.847,104,0.484,111,0.023,112,0.023,114,2.134,124,1.771,125,1.624,156,2.134,227,1.949,233,2.369,235,2.53,247,2.369,249,3.442,258,2.663,259,4.102,261,3.476,273,3.476,282,2.134,283,2.663,431,2.53,549,3.058,550,4.771,551,5.63,552,4.771,553,4.771,554,3.656,555,3.656,556,3.656,557,3.656,558,3.656]],["title/components/UsersComponent.html",[0,0.046,105,0.569]],["body/components/UsersComponent.html",[0,0.066,1,0.493,2,0.992,3,0.221,4,0.188,5,0.755,6,0.755,7,0.755,8,0.755,9,0.188,13,1.369,14,2.041,15,0.641,16,1.589,17,1.716,18,0.755,20,1.077,22,1.077,24,0.366,25,0.839,26,0.913,29,2.225,30,0.641,33,0.896,35,0.588,36,0.031,37,0.462,38,0.414,39,0.588,45,0.641,46,1.369,50,0.769,51,0.608,52,0.327,55,0.221,56,0.366,57,0.641,62,1.228,73,0.641,74,1.077,75,1.077,76,0.539,77,1.368,78,0.755,79,1.077,80,0.539,81,0.755,82,0.539,83,0.755,84,0.539,85,0.755,86,0.493,87,0.755,88,0.493,89,0.755,90,0.493,91,0.755,92,0.539,93,0.755,94,0.493,95,0.588,96,0.755,97,0.539,98,0.755,99,0.493,100,1.077,101,0.493,102,0.755,103,0.493,104,0.663,105,0.892,106,1.275,107,0.696,108,0.493,109,0.696,110,0.755,111,0.019,112,0.019,124,1.339,125,1.228,430,2.872,431,2.655,436,2.014,437,2.312,443,2.872,542,2.312,543,2.312,559,2.312,560,4.594,561,3.942,562,3.942,563,2.765,564,2.765,565,2.765,566,2.765,567,2.765,568,2.765,569,2.765]],["title/coverage.html",[570,3.647]],["body/coverage.html",[0,0.09,1,0.516,9,0.197,10,2.424,11,2.112,12,2.97,32,1.404,36,0.031,38,0.304,50,0.565,76,0.565,80,0.565,82,0.565,84,0.565,86,0.516,88,0.516,90,0.516,92,0.565,94,0.516,95,0.617,97,0.565,99,0.516,101,0.516,103,0.516,104,0.383,105,0.516,108,0.516,111,0.019,112,0.019,113,2.424,119,1.184,141,1.692,142,1.692,146,2.112,166,2.112,168,2.112,175,2.112,178,2.112,182,1.692,185,2.112,188,2.112,198,1.404,205,2.09,206,1.692,208,2.112,209,2.424,213,2.112,215,2.424,227,1.926,248,2.424,282,2.379,346,1.878,348,2.424,356,2.424,361,2.424,367,2.424,377,2.424,386,2.424,390,2.424,406,2.424,424,2.424,425,2.424,431,1.537,445,2.424,447,2.97,448,2.424,470,2.97,483,2.424,503,2.424,504,2.424,514,2.424,516,2.424,538,2.424,541,2.424,549,2.424,559,2.424,570,2.424,571,2.899,572,2.899,573,2.899,574,6.546,575,5.39,576,4.715,577,5.743,578,5.39,579,2.899,580,4.076,581,5.39,582,4.076,583,2.899,584,2.424,585,2.424,586,2.899,587,2.899]],["title/dependencies.html",[132,2.49,588,1.944]],["body/dependencies.html",[36,0.031,52,0.501,111,0.025,112,0.025,132,2.743,149,4.38,150,3.816,153,1.73,159,2.471,228,2.743,290,3.541,291,3.541,589,4.234,590,6.371,591,4.234,592,4.234,593,4.234,594,4.234,595,4.234,596,4.234,597,5.238,598,4.38,599,4.234,600,4.234,601,4.234,602,4.234,603,4.234,604,4.234,605,4.234,606,4.234]],["title/index.html",[24,0.353,607,2.669,608,2.669]],["body/index.html",[0,0.077,4,0.247,13,1.263,36,0.023,37,0.335,95,0.774,111,0.023,112,0.023,126,2.648,145,2.648,588,2.648,598,3.975,609,4.753,610,3.635,611,5.297,612,5.297,613,3.04,614,3.635,615,3.635,616,5.83,617,6.092,618,3.635,619,3.635,620,3.635,621,3.635,622,3.635,623,3.635,624,3.635,625,3.635,626,3.635,627,3.635,628,3.635,629,5.297,630,5.297,631,3.635,632,5.618,633,3.635,634,3.635,635,3.635,636,3.635,637,4.753,638,4.753,639,5.618,640,3.635,641,4.753,642,4.753,643,3.635,644,5.98,645,3.635,646,3.635,647,3.635,648,4.753,649,3.635,650,3.635,651,3.635,652,3.635,653,3.635,654,3.635,655,5.297,656,3.635,657,3.635,658,3.635,659,2.648,660,3.635,661,3.635]],["title/modules.html",[131,3.177]],["body/modules.html",[36,0.028,111,0.028,112,0.028,130,3.258,131,3.663,150,3.663,662,5.028,663,5.028,664,5.028]],["title/overview.html",[659,3.177]],["body/overview.html",[1,0.903,2,0.838,36,0.031,68,3.951,73,0.771,76,0.649,80,1.162,84,0.989,86,0.903,88,0.903,90,0.903,92,0.989,94,0.903,97,0.989,99,0.903,101,0.903,103,0.903,105,0.903,108,0.903,111,0.021,112,0.021,129,3.266,130,4.318,132,2.156,133,2.783,134,2.783,135,2.783,136,2.783,137,2.783,138,2.783,139,2.783,140,2.783,141,2.959,142,2.959,143,3.749,144,2.783,145,2.424,207,1.942,213,2.424,247,2.156,346,2.156,659,2.424,665,3.328,666,3.328,667,3.328]],["title/properties.html",[25,0.818,588,1.944]],["body/properties.html",[25,1.079,36,0.029,111,0.028,112,0.028,613,4.239,668,5.069]],["title/miscellaneous/variables.html",[669,2.232,670,3.214]],["body/miscellaneous/variables.html",[0,0.091,1,0.602,24,0.447,36,0.032,38,0.537,44,1.084,65,2.828,82,0.659,86,0.602,88,0.602,90,0.602,94,0.602,99,0.807,101,0.602,103,0.602,105,0.602,106,0.783,111,0.022,112,0.022,124,2.475,125,2.27,146,2.463,151,2.463,182,3.42,188,3.301,189,5.25,190,2.828,191,4.269,192,2.828,193,2.828,194,2.828,195,2.463,196,2.828,197,1.974,198,1.638,204,2.191,249,2.936,282,3.187,584,2.828,585,2.828,669,2.828,670,2.828,671,3.381,672,3.381,673,3.381,674,4.531,675,4.531,676,4.531]]],"invertedIndex":[["",{"_index":36,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/EllipsisPipe.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"directives/HighlightDirective.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"interfaces/Post.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"injectables/PostService.html":{},"interfaces/Register.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/User.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":574,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":668,"title":{},"body":{"properties.html":{}}}],["0.13.0",{"_index":606,"title":{},"body":{"dependencies.html":{}}}],["0.17.4",{"_index":599,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":577,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":579,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":582,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":578,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":575,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":581,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":580,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":583,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":68,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/InactivePostsComponent.html":{},"overview.html":{}}}],["10",{"_index":355,"title":{},"body":{"pipes/EllipsisPipe.html":{}}}],["100px",{"_index":366,"title":{},"body":{"components/HeaderComponent.html":{}}}],["14",{"_index":665,"title":{},"body":{"overview.html":{}}}],["16.2.0",{"_index":590,"title":{},"body":{"dependencies.html":{}}}],["16.2.11",{"_index":614,"title":{},"body":{"index.html":{}}}],["2.1.0",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":604,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":666,"title":{},"body":{"overview.html":{}}}],["4",{"_index":667,"title":{},"body":{"overview.html":{}}}],["5.2.0",{"_index":594,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["8.2.2",{"_index":596,"title":{},"body":{"dependencies.html":{}}}],["accedi",{"_index":405,"title":{},"body":{"components/LoginComponent.html":{}}}],["accesstoken",{"_index":210,"title":{},"body":{"interfaces/AuthData.html":{}}}],["activatedroute",{"_index":474,"title":{},"body":{"components/PostDetailsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["activatedroutesnapshot",{"_index":219,"title":{},"body":{"guards/AuthGuard.html":{}}}],["active",{"_index":18,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["activeposts",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["activeposts/:id",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["activepostscomponent",{"_index":1,"title":{"components/ActivePostsComponent.html":{}},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["actual_component",{"_index":110,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["add",{"_index":651,"title":{},"body":{"index.html":{}}}],["admin",{"_index":540,"title":{},"body":{"interfaces/User.html":{}}}],["ai",{"_index":385,"title":{},"body":{"components/HomeComponent.html":{}}}],["alert('devi",{"_index":239,"title":{},"body":{"guards/AuthGuard.html":{}}}],["already",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{}}}],["angular",{"_index":611,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":589,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":591,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/PostService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":592,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":52,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/EllipsisPipe.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"directives/HighlightDirective.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NewPostComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NewPostComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"dependencies.html":{}}}],["apiurl",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":17,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["app.component",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":80,"title":{"components/AppComponent.html":{}},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["apphighlight",{"_index":109,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"directives/HighlightDirective.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["application",{"_index":622,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":130,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["arrayusers",{"_index":428,"title":{},"body":{"components/NewPostComponent.html":{}}}],["artifacts",{"_index":633,"title":{},"body":{"index.html":{}}}],["aspetta",{"_index":461,"title":{},"body":{"components/PostCardComponent.html":{}}}],["attiva",{"_index":389,"title":{},"body":{"components/InactivePostsComponent.html":{}}}],["attivato",{"_index":59,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/InactivePostsComponent.html":{}}}],["attivi",{"_index":70,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/NavbarComponent.html":{}}}],["attivo",{"_index":482,"title":{},"body":{"components/PostDetailsComponent.html":{}}}],["auth",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["auth.service",{"_index":229,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["auth/auth.guard",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["auth/login/login.component",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/register/register.component",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/token.interceptor",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["auth0/angular",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["authdata",{"_index":206,"title":{"interfaces/AuthData.html":{}},"body":{"interfaces/AuthData.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"coverage.html":{}}}],["authguard",{"_index":182,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":119,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["authsrv",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["authsub",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["autologout",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["autologout(user",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["automatically",{"_index":623,"title":{},"body":{"index.html":{}}}],["autore",{"_index":442,"title":{},"body":{"components/NewPostComponent.html":{}}}],["backgroundcolor",{"_index":375,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["bearer",{"_index":533,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["behaviorsubject",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(null",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["benvenuto",{"_index":422,"title":{},"body":{"components/NavbarComponent.html":{}}}],["boolean",{"_index":225,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Post.html":{}}}],["bootstrap",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["break",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["browse",{"_index":664,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":632,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["canactivate(route",{"_index":218,"title":{},"body":{"guards/AuthGuard.html":{}}}],["capabilities",{"_index":653,"title":{},"body":{"index.html":{}}}],["card",{"_index":449,"title":{},"body":{"components/PostCardComponent.html":{}}}],["card'},{'name",{"_index":98,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["card.component",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["card.component.html",{"_index":451,"title":{},"body":{"components/PostCardComponent.html":{}}}],["card.component.scss",{"_index":450,"title":{},"body":{"components/PostCardComponent.html":{}}}],["card.component.ts",{"_index":448,"title":{},"body":{"components/PostCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:10",{"_index":453,"title":{},"body":{"components/PostCardComponent.html":{}}}],["card/post",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"components/PostCardComponent.html":{},"coverage.html":{}}}],["case",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["catch",{"_index":402,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["catcherror",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["catcherror(this.errors",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["change",{"_index":625,"title":{},"body":{"index.html":{}}}],["che",{"_index":460,"title":{},"body":{"components/PostCardComponent.html":{}}}],["check",{"_index":658,"title":{},"body":{"index.html":{}}}],["chiamata",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["children",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["choice",{"_index":647,"title":{},"body":{"index.html":{}}}],["class",{"_index":56,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/EllipsisPipe.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"directives/HighlightDirective.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["cli",{"_index":612,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":627,"title":{},"body":{"index.html":{}}}],["command",{"_index":648,"title":{},"body":{"index.html":{}}}],["completato",{"_index":441,"title":{},"body":{"components/NewPostComponent.html":{}}}],["completed",{"_index":64,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/InactivePostsComponent.html":{},"interfaces/Post.html":{}}}],["completo",{"_index":513,"title":{},"body":{"components/RegisterComponent.html":{}}}],["component",{"_index":0,"title":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":78,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["componente",{"_index":457,"title":{},"body":{"components/PostCardComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["components/active",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["components/error404/error404.component",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["components/header/header.component",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["components/home/home.component",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["components/inactive",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["components/navbar/navbar.component",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["components/new",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["components/post",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["components/user",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["components/users/users.component",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["concurrently",{"_index":595,"title":{},"body":{"dependencies.html":{}}}],["console.error(error",{"_index":404,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["console.log('auth",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('ngoninit",{"_index":58,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/InactivePostsComponent.html":{}}}],["console.log(err.error",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(form.value",{"_index":398,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["console.log(newreq",{"_index":535,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["const",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/PostDetailsComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/UserDetailsComponent.html":{}}}],["constructor",{"_index":30,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"directives/HighlightDirective.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostDetailsComponent.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["constructor(authsrv",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["constructor(http",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{}}}],["constructor(postsrv",{"_index":31,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/InactivePostsComponent.html":{},"components/NewPostComponent.html":{},"components/PostDetailsComponent.html":{}}}],["constructor(private",{"_index":57,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"directives/HighlightDirective.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostDetailsComponent.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["constructor(target",{"_index":368,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["constructor(usersrv",{"_index":542,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["contenuto",{"_index":360,"title":{},"body":{"components/Error404Component.html":{}}}],["coverage",{"_index":570,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crea",{"_index":418,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cursor",{"_index":568,"title":{},"body":{"components/UsersComponent.html":{}}}],["dai",{"_index":463,"title":{},"body":{"components/PostCardComponent.html":{}}}],["data",{"_index":62,"title":{},"body":{"components/ActivePostsComponent.html":{},"injectables/AuthService.html":{},"components/InactivePostsComponent.html":{},"components/NewPostComponent.html":{},"components/PostDetailsComponent.html":{},"injectables/PostService.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["data).pipe",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.interface",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["data.interface.ts",{"_index":209,"title":{},"body":{"interfaces/AuthData.html":{},"coverage.html":{}}}],["date",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["date().gettime",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["dateexpiration",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["dateexpiration.gettime",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["declarations",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/NewPostComponent.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":33,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/EllipsisPipe.html":{},"directives/HighlightDirective.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["deletepost",{"_index":27,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/InactivePostsComponent.html":{},"injectables/PostService.html":{}}}],["deletepost(id",{"_index":41,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/InactivePostsComponent.html":{},"injectables/PostService.html":{}}}],["dependencies",{"_index":132,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["details",{"_index":471,"title":{},"body":{"components/PostDetailsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["details'},{'name",{"_index":100,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["details.component",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["details.component.html",{"_index":473,"title":{},"body":{"components/PostDetailsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["details.component.scss",{"_index":472,"title":{},"body":{"components/PostDetailsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["details.component.ts",{"_index":470,"title":{},"body":{"components/PostDetailsComponent.html":{},"components/UserDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:12",{"_index":475,"title":{},"body":{"components/PostDetailsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["details.component.ts:16",{"_index":476,"title":{},"body":{"components/PostDetailsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["details/post",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"components/PostDetailsComponent.html":{},"coverage.html":{}}}],["details/user",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"components/UserDetailsComponent.html":{},"coverage.html":{}}}],["dettagli",{"_index":72,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/InactivePostsComponent.html":{}}}],["dev",{"_index":619,"title":{},"body":{"index.html":{}}}],["development",{"_index":615,"title":{},"body":{"index.html":{}}}],["di",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"components/PostCardComponent.html":{}}}],["directive",{"_index":76,"title":{"directives/HighlightDirective.html":{}},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"directives/HighlightDirective.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":107,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"directives/HighlightDirective.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["directives/highlight.directive",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":631,"title":{},"body":{"index.html":{}}}],["directory",{"_index":636,"title":{},"body":{"index.html":{}}}],["disablepost",{"_index":28,"title":{},"body":{"components/ActivePostsComponent.html":{}}}],["disablepost(id",{"_index":47,"title":{},"body":{"components/ActivePostsComponent.html":{}}}],["disattiva",{"_index":71,"title":{},"body":{"components/ActivePostsComponent.html":{}}}],["dist",{"_index":635,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":571,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["dynamic",{"_index":593,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":645,"title":{},"body":{"index.html":{}}}],["element",{"_index":75,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["elementi",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["elemento",{"_index":466,"title":{},"body":{"components/PostCardComponent.html":{}}}],["elementref",{"_index":369,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["ellipsis",{"_index":349,"title":{},"body":{"pipes/EllipsisPipe.html":{},"components/PostCardComponent.html":{}}}],["ellipsispipe",{"_index":141,"title":{"pipes/EllipsisPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/EllipsisPipe.html":{},"coverage.html":{},"overview.html":{}}}],["email",{"_index":212,"title":{},"body":{"interfaces/AuthData.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/Register.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserDetailsComponent.html":{}}}],["enablepost",{"_index":387,"title":{},"body":{"components/InactivePostsComponent.html":{}}}],["enablepost(id",{"_index":388,"title":{},"body":{"components/InactivePostsComponent.html":{}}}],["end",{"_index":644,"title":{},"body":{"index.html":{}}}],["environment",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{}}}],["err",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["err.error",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["errata",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["error",{"_index":403,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["error404",{"_index":357,"title":{},"body":{"components/Error404Component.html":{}}}],["error404'},{'name",{"_index":83,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["error404.component.html",{"_index":359,"title":{},"body":{"components/Error404Component.html":{}}}],["error404.component.scss",{"_index":358,"title":{},"body":{"components/Error404Component.html":{}}}],["error404component",{"_index":82,"title":{"components/Error404Component.html":{}},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["errors(err",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["essere",{"_index":240,"title":{},"body":{"guards/AuthGuard.html":{}}}],["execute",{"_index":641,"title":{},"body":{"index.html":{}}}],["exists",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":55,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/EllipsisPipe.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"directives/HighlightDirective.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"interfaces/Post.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"injectables/PostService.html":{},"interfaces/Register.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/User.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["exports",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["false",{"_index":65,"title":{},"body":{"components/ActivePostsComponent.html":{},"miscellaneous/variables.html":{}}}],["figlio",{"_index":458,"title":{},"body":{"components/PostCardComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/EllipsisPipe.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"directives/HighlightDirective.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"interfaces/Post.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"injectables/PostService.html":{},"interfaces/Register.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/User.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["files",{"_index":626,"title":{},"body":{"index.html":{}}}],["find",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["first",{"_index":650,"title":{},"body":{"index.html":{}}}],["form",{"_index":397,"title":{},"body":{"components/LoginComponent.html":{},"components/NewPostComponent.html":{},"components/RegisterComponent.html":{}}}],["formsmodule",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["further",{"_index":654,"title":{},"body":{"index.html":{}}}],["generate",{"_index":629,"title":{},"body":{"index.html":{}}}],["generated",{"_index":610,"title":{},"body":{"index.html":{}}}],["gestire",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["getpost",{"_index":484,"title":{},"body":{"injectables/PostService.html":{}}}],["getpost(id",{"_index":489,"title":{},"body":{"injectables/PostService.html":{}}}],["getposts",{"_index":485,"title":{},"body":{"injectables/PostService.html":{}}}],["getting",{"_index":607,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":550,"title":{},"body":{"injectables/UserService.html":{}}}],["getuser(id",{"_index":553,"title":{},"body":{"injectables/UserService.html":{}}}],["getusers",{"_index":551,"title":{},"body":{"injectables/UserService.html":{}}}],["gi",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["go",{"_index":657,"title":{},"body":{"index.html":{}}}],["group",{"_index":566,"title":{},"body":{"components/UsersComponent.html":{}}}],["guard",{"_index":213,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":214,"title":{},"body":{"guards/AuthGuard.html":{}}}],["header",{"_index":362,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":85,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["header.component.html",{"_index":364,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":363,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":84,"title":{"components/HeaderComponent.html":{}},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headers",{"_index":531,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["height",{"_index":365,"title":{},"body":{"components/HeaderComponent.html":{}}}],["help",{"_index":655,"title":{},"body":{"index.html":{}}}],["highlightdirective",{"_index":108,"title":{"directives/HighlightDirective.html":{}},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"directives/HighlightDirective.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["home",{"_index":378,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["home'},{'name",{"_index":87,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["home.component.html",{"_index":380,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":379,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":86,"title":{"components/HomeComponent.html":{}},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":74,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["http",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{}}}],["http://localhost:4200",{"_index":621,"title":{},"body":{"index.html":{}}}],["http://localhost:4201",{"_index":676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":525,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["httphandler",{"_index":522,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["httpinterceptor",{"_index":526,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["httprequest",{"_index":520,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["id",{"_index":44,"title":{},"body":{"components/ActivePostsComponent.html":{},"modules/AppModule.html":{},"interfaces/AuthData.html":{},"components/InactivePostsComponent.html":{},"interfaces/Post.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"injectables/PostService.html":{},"interfaces/User.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":572,"title":{},"body":{"coverage.html":{}}}],["il",{"_index":456,"title":{},"body":{"components/PostCardComponent.html":{}}}],["implements",{"_index":13,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"pipes/EllipsisPipe.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostDetailsComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["import",{"_index":51,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/EllipsisPipe.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"directives/HighlightDirective.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["imports",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["inactive",{"_index":89,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["inactiveposts",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["inactiveposts/:id",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["inactivepostscomponent",{"_index":88,"title":{"components/InactivePostsComponent.html":{}},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["incorrect",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":24,"title":{"index.html":{}},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"interfaces/Post.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"injectables/PostService.html":{},"interfaces/Register.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/User.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/EllipsisPipe.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"directives/HighlightDirective.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"interfaces/Post.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"injectables/PostService.html":{},"interfaces/Register.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/User.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["injectable",{"_index":227,"title":{"injectables/AuthService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/PostService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":454,"title":{},"body":{"components/PostCardComponent.html":{}}}],["input('post",{"_index":455,"title":{},"body":{"components/PostCardComponent.html":{}}}],["inputs",{"_index":452,"title":{},"body":{"components/PostCardComponent.html":{}}}],["intercept",{"_index":517,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["intercept(request",{"_index":519,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["interceptor",{"_index":514,"title":{"interceptors/TokenInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":515,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["interface",{"_index":205,"title":{"interfaces/AuthData.html":{},"interfaces/Post.html":{},"interfaces/Register.html":{},"interfaces/User.html":{}},"body":{"interfaces/AuthData.html":{},"interfaces/Post.html":{},"interfaces/Register.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":207,"title":{},"body":{"interfaces/AuthData.html":{},"interfaces/Post.html":{},"interfaces/Register.html":{},"interfaces/User.html":{},"overview.html":{}}}],["invia",{"_index":444,"title":{},"body":{"components/NewPostComponent.html":{}}}],["json",{"_index":597,"title":{},"body":{"dependencies.html":{}}}],["json.parse(userjson",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(data",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["jsonplaceholder",{"_index":382,"title":{},"body":{"components/HomeComponent.html":{}}}],["jwt",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["jwthelper",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwthelperservice",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["karma",{"_index":643,"title":{},"body":{"index.html":{}}}],["la",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["legend",{"_index":73,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["li",{"_index":567,"title":{},"body":{"components/UsersComponent.html":{}}}],["list",{"_index":565,"title":{},"body":{"components/UsersComponent.html":{}}}],["lista",{"_index":381,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["literal",{"_index":211,"title":{},"body":{"interfaces/AuthData.html":{},"injectables/AuthService.html":{}}}],["localstorage.getitem('user",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('user",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('user",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["loggato",{"_index":241,"title":{},"body":{"guards/AuthGuard.html":{}}}],["login",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":91,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["login(data",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(form",{"_index":394,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":392,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":391,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":90,"title":{"components/LoginComponent.html":{}},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["logout",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["map",{"_index":231,"title":{},"body":{"guards/AuthGuard.html":{}}}],["map((user",{"_index":238,"title":{},"body":{"guards/AuthGuard.html":{}}}],["matching",{"_index":112,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/EllipsisPipe.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"directives/HighlightDirective.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"interfaces/Post.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"injectables/PostService.html":{},"interfaces/Register.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/User.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"pipes/EllipsisPipe.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"directives/HighlightDirective.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["methods",{"_index":26,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/EllipsisPipe.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostDetailsComponent.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["millisecondsexp",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["miscellaneous",{"_index":669,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["models/auth",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["models/post.interface",{"_index":497,"title":{},"body":{"injectables/PostService.html":{}}}],["models/register.interface",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["models/user.interface",{"_index":556,"title":{},"body":{"injectables/UserService.html":{}}}],["module",{"_index":129,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":131,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["more",{"_index":656,"title":{},"body":{"index.html":{}}}],["multi",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":37,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/EllipsisPipe.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"directives/HighlightDirective.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"injectables/PostService.html":{},"interfaces/Register.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/User.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["navbar",{"_index":407,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":93,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["navbar.component.html",{"_index":409,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":408,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":92,"title":{"components/NavbarComponent.html":{}},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":620,"title":{},"body":{"index.html":{}}}],["need",{"_index":649,"title":{},"body":{"index.html":{}}}],["nella",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["new",{"_index":95,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"index.html":{}}}],["newpost",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"injectables/PostService.html":{},"miscellaneous/variables.html":{}}}],["newpost(data",{"_index":492,"title":{},"body":{"injectables/PostService.html":{}}}],["newpostcomponent",{"_index":94,"title":{"components/NewPostComponent.html":{}},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["newreq",{"_index":529,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["next",{"_index":521,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["next.handle(newreq",{"_index":536,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["next.handle(request",{"_index":537,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["ng",{"_index":617,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":395,"title":{},"body":{"components/LoginComponent.html":{},"components/NewPostComponent.html":{},"components/RegisterComponent.html":{}}}],["ngmodule",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":29,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"components/InactivePostsComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostDetailsComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["nome",{"_index":512,"title":{},"body":{"components/RegisterComponent.html":{}}}],["non",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{},"components/Error404Component.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/NavbarComponent.html":{},"components/PostDetailsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["null",{"_index":413,"title":{},"body":{"components/NavbarComponent.html":{}}}],["number",{"_index":42,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/InactivePostsComponent.html":{},"interfaces/Post.html":{},"injectables/PostService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["numero",{"_index":481,"title":{},"body":{"components/PostDetailsComponent.html":{}}}],["nuovo",{"_index":419,"title":{},"body":{"components/NavbarComponent.html":{}}}],["object",{"_index":674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":223,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/TokenInterceptor.html":{}}}],["oninit",{"_index":14,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"components/InactivePostsComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostDetailsComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["onsubmit",{"_index":507,"title":{},"body":{"components/RegisterComponent.html":{}}}],["onsubmit(form",{"_index":509,"title":{},"body":{"components/RegisterComponent.html":{}}}],["optional",{"_index":39,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/EllipsisPipe.html":{},"directives/HighlightDirective.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostDetailsComponent.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["out",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":659,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":588,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padri",{"_index":464,"title":{},"body":{"components/PostCardComponent.html":{}}}],["page",{"_index":661,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":35,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/EllipsisPipe.html":{},"directives/HighlightDirective.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostDetailsComponent.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["params['id",{"_index":478,"title":{},"body":{"components/PostDetailsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["partial",{"_index":495,"title":{},"body":{"injectables/PostService.html":{}}}],["password",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/Register.html":{},"components/RegisterComponent.html":{}}}],["path",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["per",{"_index":242,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["pipe",{"_index":346,"title":{"pipes/EllipsisPipe.html":{}},"body":{"pipes/EllipsisPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(catcherror(this.errors",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["pipes",{"_index":347,"title":{},"body":{"pipes/EllipsisPipe.html":{}}}],["pipes/ellipsis.pipe",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["pipetransform",{"_index":353,"title":{},"body":{"pipes/EllipsisPipe.html":{}}}],["platform",{"_index":646,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":569,"title":{},"body":{"components/UsersComponent.html":{}}}],["post",{"_index":50,"title":{"interfaces/Post.html":{}},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"interfaces/Post.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["post'},{'name",{"_index":96,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["post(`${this.apiurl}register",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["post.component",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["post.component.html",{"_index":427,"title":{},"body":{"components/NewPostComponent.html":{}}}],["post.component.scss",{"_index":426,"title":{},"body":{"components/NewPostComponent.html":{}}}],["post.component.ts",{"_index":425,"title":{},"body":{"components/NewPostComponent.html":{},"coverage.html":{}}}],["post.component.ts:15",{"_index":432,"title":{},"body":{"components/NewPostComponent.html":{}}}],["post.component.ts:19",{"_index":433,"title":{},"body":{"components/NewPostComponent.html":{}}}],["post.component.ts:25",{"_index":435,"title":{},"body":{"components/NewPostComponent.html":{}}}],["post.id",{"_index":468,"title":{},"body":{"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{}}}],["post.title",{"_index":469,"title":{},"body":{"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{}}}],["post/new",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"components/NewPostComponent.html":{},"coverage.html":{}}}],["postapp",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"index.html":{}}}],["postcardcomponent",{"_index":97,"title":{"components/PostCardComponent.html":{}},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["postdetailscomponent",{"_index":99,"title":{"components/PostDetailsComponent.html":{}},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["posts",{"_index":19,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/HeaderComponent.html":{},"components/InactivePostsComponent.html":{}}}],["posts'},{'name",{"_index":79,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["posts.component",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["posts.component.html",{"_index":23,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/InactivePostsComponent.html":{}}}],["posts.component.scss",{"_index":21,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/InactivePostsComponent.html":{}}}],["posts.component.ts",{"_index":12,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/InactivePostsComponent.html":{},"coverage.html":{}}}],["posts.component.ts:11",{"_index":34,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/InactivePostsComponent.html":{}}}],["posts.component.ts:15",{"_index":49,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/InactivePostsComponent.html":{}}}],["posts.component.ts:22",{"_index":48,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/InactivePostsComponent.html":{}}}],["posts.component.ts:27",{"_index":43,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/InactivePostsComponent.html":{}}}],["posts/active",{"_index":11,"title":{},"body":{"components/ActivePostsComponent.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["posts/inactive",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"components/InactivePostsComponent.html":{},"coverage.html":{}}}],["postservice",{"_index":32,"title":{"injectables/PostService.html":{}},"body":{"components/ActivePostsComponent.html":{},"components/InactivePostsComponent.html":{},"components/NewPostComponent.html":{},"components/PostDetailsComponent.html":{},"injectables/PostService.html":{},"coverage.html":{}}}],["postsrv",{"_index":40,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/InactivePostsComponent.html":{},"components/NewPostComponent.html":{},"components/PostDetailsComponent.html":{}}}],["presente",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["private",{"_index":234,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"directives/HighlightDirective.html":{},"components/LoginComponent.html":{},"components/NewPostComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{}}}],["procedura",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["production",{"_index":675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":609,"title":{},"body":{"index.html":{}}}],["promise",{"_index":224,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properties",{"_index":25,"title":{"properties.html":{}},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"interfaces/AuthData.html":{},"injectables/AuthService.html":{},"components/InactivePostsComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"interfaces/Post.html":{},"components/PostDetailsComponent.html":{},"injectables/PostService.html":{},"interfaces/Register.html":{},"interfaces/User.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"properties.html":{}}}],["provide",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":233,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["questa",{"_index":244,"title":{},"body":{"guards/AuthGuard.html":{}}}],["reactiveformsmodule",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["red",{"_index":376,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["reference",{"_index":660,"title":{},"body":{"index.html":{}}}],["register",{"_index":198,"title":{"interfaces/Register.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/Register.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["register'},{'name",{"_index":102,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["register.component.html",{"_index":506,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":505,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":101,"title":{"components/RegisterComponent.html":{}},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["registrati",{"_index":421,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["reload",{"_index":624,"title":{},"body":{"index.html":{}}}],["render",{"_index":370,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["renderer2",{"_index":371,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["request",{"_index":524,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["request.clone",{"_index":530,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["request.headers.append('authorization",{"_index":532,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["reset",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["restore",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":111,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/EllipsisPipe.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"directives/HighlightDirective.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"interfaces/Post.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"injectables/PostService.html":{},"interfaces/Register.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/User.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":235,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/EllipsisPipe.html":{},"injectables/PostService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":45,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/EllipsisPipe.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostDetailsComponent.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["ricevere",{"_index":462,"title":{},"body":{"components/PostCardComponent.html":{}}}],["risorsa",{"_index":245,"title":{},"body":{"guards/AuthGuard.html":{}}}],["role",{"_index":539,"title":{},"body":{"interfaces/User.html":{}}}],["root",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":81,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["route",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":216,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NewPostComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{}}}],["routermodule",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(routes",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["routerstatesnapshot",{"_index":221,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":616,"title":{},"body":{"index.html":{}}}],["running",{"_index":637,"title":{},"body":{"index.html":{}}}],["ruolo",{"_index":546,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["rxjs",{"_index":228,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/TokenInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":232,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/TokenInterceptor.html":{}}}],["save",{"_index":429,"title":{},"body":{"components/NewPostComponent.html":{}}}],["save(form",{"_index":434,"title":{},"body":{"components/NewPostComponent.html":{}}}],["scaffolding",{"_index":628,"title":{},"body":{"index.html":{}}}],["selector",{"_index":16,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"directives/HighlightDirective.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["serve",{"_index":618,"title":{},"body":{"index.html":{}}}],["server",{"_index":598,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["settimeout",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["sia",{"_index":459,"title":{},"body":{"components/PostCardComponent.html":{}}}],["signup",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup(data",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/EllipsisPipe.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"directives/HighlightDirective.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"interfaces/Post.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"injectables/PostService.html":{},"interfaces/Register.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/User.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["src/.../app.module.ts",{"_index":673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.development.ts",{"_index":671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/auth.guard.ts",{"_index":215,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.ts:16",{"_index":217,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:18",{"_index":222,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.service",{"_index":414,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/auth/auth.service.ts",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/auth/auth.service.ts:15",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:16",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:19",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:20",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:21",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:25",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:39",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:45",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:51",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:61",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:69",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/login/login.component.ts",{"_index":390,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts:11",{"_index":393,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:14",{"_index":396,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/register/register.component.ts",{"_index":504,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/auth/register/register.component.ts:11",{"_index":508,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/register/register.component.ts:15",{"_index":510,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/token.interceptor.ts",{"_index":516,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["src/app/auth/token.interceptor.ts:13",{"_index":518,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/app/auth/token.interceptor.ts:16",{"_index":523,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/app/components/active",{"_index":10,"title":{},"body":{"components/ActivePostsComponent.html":{},"coverage.html":{}}}],["src/app/components/error404/error404.component.ts",{"_index":356,"title":{},"body":{"components/Error404Component.html":{},"coverage.html":{}}}],["src/app/components/header/header.component.ts",{"_index":361,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/components/home/home.component.ts",{"_index":377,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/inactive",{"_index":386,"title":{},"body":{"components/InactivePostsComponent.html":{},"coverage.html":{}}}],["src/app/components/navbar/navbar.component.ts",{"_index":406,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/components/navbar/navbar.component.ts:11",{"_index":410,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:15",{"_index":412,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:21",{"_index":411,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/new",{"_index":424,"title":{},"body":{"components/NewPostComponent.html":{},"coverage.html":{}}}],["src/app/components/post",{"_index":447,"title":{},"body":{"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"coverage.html":{}}}],["src/app/components/user",{"_index":541,"title":{},"body":{"components/UserDetailsComponent.html":{},"coverage.html":{}}}],["src/app/components/users/users.component.ts",{"_index":559,"title":{},"body":{"components/UsersComponent.html":{},"coverage.html":{}}}],["src/app/components/users/users.component.ts:11",{"_index":562,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/components/users/users.component.ts:15",{"_index":563,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/directives/highlight.directive.ts",{"_index":367,"title":{},"body":{"directives/HighlightDirective.html":{},"coverage.html":{}}}],["src/app/directives/highlight.directive.ts:6",{"_index":372,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["src/app/models/auth",{"_index":208,"title":{},"body":{"interfaces/AuthData.html":{},"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/models/post.interface",{"_index":53,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/InactivePostsComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{}}}],["src/app/models/post.interface.ts",{"_index":445,"title":{},"body":{"interfaces/Post.html":{},"coverage.html":{}}}],["src/app/models/register.interface.ts",{"_index":503,"title":{},"body":{"interfaces/Register.html":{},"coverage.html":{}}}],["src/app/models/user.interface",{"_index":543,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["src/app/models/user.interface.ts",{"_index":538,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/pipes/ellipsis.pipe.ts",{"_index":348,"title":{},"body":{"pipes/EllipsisPipe.html":{},"coverage.html":{}}}],["src/app/pipes/ellipsis.pipe.ts:7",{"_index":352,"title":{},"body":{"pipes/EllipsisPipe.html":{}}}],["src/app/service/post.service",{"_index":54,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/InactivePostsComponent.html":{},"components/NewPostComponent.html":{},"components/PostDetailsComponent.html":{}}}],["src/app/service/post.service.ts",{"_index":483,"title":{},"body":{"injectables/PostService.html":{},"coverage.html":{}}}],["src/app/service/post.service.ts:11",{"_index":487,"title":{},"body":{"injectables/PostService.html":{}}}],["src/app/service/post.service.ts:15",{"_index":491,"title":{},"body":{"injectables/PostService.html":{}}}],["src/app/service/post.service.ts:19",{"_index":490,"title":{},"body":{"injectables/PostService.html":{}}}],["src/app/service/post.service.ts:23",{"_index":493,"title":{},"body":{"injectables/PostService.html":{}}}],["src/app/service/post.service.ts:27",{"_index":496,"title":{},"body":{"injectables/PostService.html":{}}}],["src/app/service/post.service.ts:31",{"_index":488,"title":{},"body":{"injectables/PostService.html":{}}}],["src/app/service/user.service",{"_index":436,"title":{},"body":{"components/NewPostComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["src/app/service/user.service.ts",{"_index":549,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/service/user.service.ts:10",{"_index":552,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/user.service.ts:14",{"_index":555,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/user.service.ts:18",{"_index":554,"title":{},"body":{"injectables/UserService.html":{}}}],["src/environments/environment.development",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{}}}],["src/environments/environment.development.ts",{"_index":584,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":585,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":608,"title":{"index.html":{}},"body":{}}],["state",{"_index":220,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":573,"title":{},"body":{"coverage.html":{}}}],["stored",{"_index":634,"title":{},"body":{"index.html":{}}}],["string",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthData.html":{},"injectables/AuthService.html":{},"pipes/EllipsisPipe.html":{},"interfaces/Post.html":{},"interfaces/Register.html":{},"interfaces/User.html":{}}}],["style",{"_index":383,"title":{},"body":{"components/HomeComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["styleurls",{"_index":20,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["subscribe",{"_index":66,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/InactivePostsComponent.html":{}}}],["support",{"_index":662,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":663,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["switchmap",{"_index":527,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["switchmap(user",{"_index":528,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["table",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":230,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/TokenInterceptor.html":{}}}],["take(1",{"_index":237,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/TokenInterceptor.html":{}}}],["tap",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["tap((data",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["target",{"_index":373,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["templateurl",{"_index":22,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["test",{"_index":640,"title":{},"body":{"index.html":{}}}],["testing",{"_index":652,"title":{},"body":{"index.html":{}}}],["tests",{"_index":639,"title":{},"body":{"index.html":{}}}],["this.arrayusers",{"_index":438,"title":{},"body":{"components/NewPostComponent.html":{}}}],["this.authsrv.login(form.value).subscribe",{"_index":400,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authsrv.logout",{"_index":417,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authsrv.restore",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authsrv.signup(form.value).subscribe",{"_index":511,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authsrv.user$.pipe",{"_index":236,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/TokenInterceptor.html":{}}}],["this.authsrv.user$.subscribe((user",{"_index":415,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authsub.asobservable",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authsub.next(data",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authsub.next(null",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authsub.next(user",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.autologout(data",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.autologout(user",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.delete(`${this.apiurl}posts/${id",{"_index":502,"title":{},"body":{"injectables/PostService.html":{}}}],["this.http.get(`${this.apiurl}posts",{"_index":498,"title":{},"body":{"injectables/PostService.html":{}}}],["this.http.get(`${this.apiurl}posts/${id",{"_index":499,"title":{},"body":{"injectables/PostService.html":{}}}],["this.http.get(`${this.apiurl}utenti",{"_index":557,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`${this.apiurl}utenti/${id",{"_index":558,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.patch(`${this.apiurl}posts/${id",{"_index":501,"title":{},"body":{"injectables/PostService.html":{}}}],["this.http.post(`${this.apiurl}login",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${this.apiurl}posts",{"_index":500,"title":{},"body":{"injectables/PostService.html":{}}}],["this.jwthelper.gettokenexpirationdate(user.accesstoken",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logout",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.post",{"_index":480,"title":{},"body":{"components/PostDetailsComponent.html":{}}}],["this.posts",{"_index":61,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/InactivePostsComponent.html":{}}}],["this.posts.splice(index",{"_index":67,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/InactivePostsComponent.html":{}}}],["this.postsrv.deletepost(id).subscribe",{"_index":69,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/InactivePostsComponent.html":{}}}],["this.postsrv.getpost(id).subscribe((data",{"_index":479,"title":{},"body":{"components/PostDetailsComponent.html":{}}}],["this.postsrv.getposts().subscribe((data",{"_index":60,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/InactivePostsComponent.html":{}}}],["this.postsrv.newpost(form.value).subscribe",{"_index":439,"title":{},"body":{"components/NewPostComponent.html":{}}}],["this.postsrv.updatepost(id",{"_index":63,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/InactivePostsComponent.html":{}}}],["this.render.setstyle(this.target.nativeelement",{"_index":374,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["this.router.createurltree(['/login",{"_index":246,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate",{"_index":401,"title":{},"body":{"components/LoginComponent.html":{},"components/NewPostComponent.html":{}}}],["this.router.navigate(['/login",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{},"components/RegisterComponent.html":{}}}],["this.router.params.subscribe((params",{"_index":477,"title":{},"body":{"components/PostDetailsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["this.timeout",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user",{"_index":416,"title":{},"body":{"components/NavbarComponent.html":{},"components/UserDetailsComponent.html":{}}}],["this.users",{"_index":564,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.usersrv.getuser(id).subscribe((data",{"_index":544,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.usersrv.getusers().subscribe((data",{"_index":437,"title":{},"body":{"components/NewPostComponent.html":{},"components/UsersComponent.html":{}}}],["throwerror",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["throwerror('errore",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["throwerror('password",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["throwerror('utente",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["timeout",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["tipo",{"_index":467,"title":{},"body":{"components/PostCardComponent.html":{}}}],["title",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Post.html":{}}}],["titolo",{"_index":440,"title":{},"body":{"components/NewPostComponent.html":{}}}],["tokeninterceptor",{"_index":142,"title":{"interceptors/TokenInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["transform",{"_index":350,"title":{},"body":{"pipes/EllipsisPipe.html":{}}}],["transform(value",{"_index":351,"title":{},"body":{"pipes/EllipsisPipe.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["trovato",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{},"components/Error404Component.html":{},"components/PostDetailsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["true",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/InactivePostsComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":399,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["tslib",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":38,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/EllipsisPipe.html":{},"directives/HighlightDirective.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"interfaces/Post.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"injectables/PostService.html":{},"interfaces/Register.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/User.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["un",{"_index":465,"title":{},"body":{"components/PostCardComponent.html":{}}}],["unit",{"_index":638,"title":{},"body":{"index.html":{}}}],["updatepost",{"_index":486,"title":{},"body":{"injectables/PostService.html":{}}}],["updatepost(id",{"_index":494,"title":{},"body":{"injectables/PostService.html":{}}}],["urltree",{"_index":226,"title":{},"body":{"guards/AuthGuard.html":{}}}],["use",{"_index":630,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":104,"title":{"interfaces/User.html":{}},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/User.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["user.accesstoken",{"_index":534,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["user.email",{"_index":545,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["user.name",{"_index":443,"title":{},"body":{"components/NewPostComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["user.role",{"_index":547,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["user.user.name",{"_index":423,"title":{},"body":{"components/NavbarComponent.html":{}}}],["userdetailscomponent",{"_index":103,"title":{"components/UserDetailsComponent.html":{}},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["userid",{"_index":446,"title":{},"body":{"interfaces/Post.html":{}}}],["userjson",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["users",{"_index":106,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["users.component.html",{"_index":561,"title":{},"body":{"components/UsersComponent.html":{}}}],["users.component.scss",{"_index":560,"title":{},"body":{"components/UsersComponent.html":{}}}],["userscomponent",{"_index":105,"title":{"components/UsersComponent.html":{}},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":431,"title":{"injectables/UserService.html":{}},"body":{"components/NewPostComponent.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["usersrv",{"_index":430,"title":{},"body":{"components/NewPostComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["utente",{"_index":548,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["utenti",{"_index":420,"title":{},"body":{"components/NavbarComponent.html":{}}}],["vai",{"_index":384,"title":{},"body":{"components/HomeComponent.html":{}}}],["value",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"pipes/EllipsisPipe.html":{},"components/NewPostComponent.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["value.slice(0",{"_index":354,"title":{},"body":{"pipes/EllipsisPipe.html":{}}}],["var",{"_index":77,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"components/Error404Component.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostCardComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["variable",{"_index":576,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":670,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":613,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":642,"title":{},"body":{"index.html":{}}}],["visualizzare",{"_index":243,"title":{},"body":{"guards/AuthGuard.html":{}}}],["void",{"_index":46,"title":{},"body":{"components/ActivePostsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/InactivePostsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NewPostComponent.html":{},"components/PostDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersComponent.html":{}}}],["zone.js",{"_index":605,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/ActivePostsComponent.html":{"url":"components/ActivePostsComponent.html","title":"component - ActivePostsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ActivePostsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/active-posts/active-posts.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-active-posts\n            \n\n\n\n            \n                styleUrls\n                ./active-posts.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./active-posts.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                posts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deletePost\n                            \n                            \n                                disablePost\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(postSrv: PostService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/active-posts/active-posts.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postSrv\n                                                  \n                                                        \n                                                                        PostService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deletePost\n                        \n                    \n                \n            \n            \n                \ndeletePost(id: number, index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/active-posts/active-posts.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disablePost\n                        \n                    \n                \n            \n            \n                \ndisablePost(id: number, index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/active-posts/active-posts.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/active-posts/active-posts.component.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        posts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Post[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/active-posts/active-posts.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Post } from 'src/app/models/post.interface';\nimport { PostService } from 'src/app/service/post.service';\n\n@Component({\n    selector: 'app-active-posts',\n    templateUrl: './active-posts.component.html',\n    styleUrls: ['./active-posts.component.scss'],\n})\nexport class ActivePostsComponent implements OnInit {\n    posts!: Post[];\n\n    constructor(private postSrv: PostService) {}\n\n    ngOnInit() {\n        console.log('ngOnInit attivato');\n        this.postSrv.getPosts().subscribe((data) => {\n            this.posts = data;\n        });\n    }\n\n    disablePost(id: number, index: number) {\n        this.postSrv.updatePost(id, { completed: false }).subscribe();\n        this.posts.splice(index, 1);\n    }\n\n    deletePost(id: number, index: number) {\n        this.postSrv.deletePost(id).subscribe();\n        this.posts.splice(index, 1);\n    }\n}\n\n    \n\n    \n        \n    Post attivi\n    \n        \n            \n                \n                    \n                        \n                        \n                            \n                                DISATTIVA\n                            \n                            \n                                DETTAGLI\n                            \n                            \n                                🗑️\n                            \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./active-posts.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Post attivi                                                                                                                                                                        DISATTIVA                                                                                        DETTAGLI                                                                                        🗑️                                                                                                                '\n    var COMPONENTS = [{'name': 'ActivePostsComponent', 'selector': 'app-active-posts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'Error404Component', 'selector': 'app-error404'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InactivePostsComponent', 'selector': 'app-inactive-posts'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NewPostComponent', 'selector': 'app-new-post'},{'name': 'PostCardComponent', 'selector': 'app-post-card'},{'name': 'PostDetailsComponent', 'selector': 'app-post-details'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'HighlightDirective', 'selector': '[appHighlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ActivePostsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authSrv: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authSrv\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'postApp'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n    title = 'postApp';\n\n    constructor(private authSrv: AuthService) {}\n\n    ngOnInit(): void {\n        this.authSrv.restore();\n    }\n\n}\n\n    \n\n    \n        \n\n    \n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'ActivePostsComponent', 'selector': 'app-active-posts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'Error404Component', 'selector': 'app-error404'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InactivePostsComponent', 'selector': 'app-inactive-posts'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NewPostComponent', 'selector': 'app-new-post'},{'name': 'PostCardComponent', 'selector': 'app-post-card'},{'name': 'PostDetailsComponent', 'selector': 'app-post-details'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'HighlightDirective', 'selector': '[appHighlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nActivePostsComponent\n\nActivePostsComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nActivePostsComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nEllipsisPipe\n\nEllipsisPipe\n\nAppModule -->\n\nEllipsisPipe->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHighlightDirective\n\nHighlightDirective\n\nAppModule -->\n\nHighlightDirective->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nInactivePostsComponent\n\nInactivePostsComponent\n\nAppModule -->\n\nInactivePostsComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nNewPostComponent\n\nNewPostComponent\n\nAppModule -->\n\nNewPostComponent->AppModule\n\n\n\n\n\nPostCardComponent\n\nPostCardComponent\n\nAppModule -->\n\nPostCardComponent->AppModule\n\n\n\n\n\nPostDetailsComponent\n\nPostDetailsComponent\n\nAppModule -->\n\nPostDetailsComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nUserDetailsComponent\n\nUserDetailsComponent\n\nAppModule -->\n\nUserDetailsComponent->AppModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nAppModule -->\n\nUsersComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nTokenInterceptor\n\nTokenInterceptor\n\nAppModule -->\n\nTokenInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ActivePostsComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            EllipsisPipe\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            HighlightDirective\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            InactivePostsComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            NewPostComponent\n                        \n                        \n                            PostCardComponent\n                        \n                        \n                            PostDetailsComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            UserDetailsComponent\n                        \n                        \n                            UsersComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            TokenInterceptor\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { Route, RouterModule } from '@angular/router';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { ActivePostsComponent } from './components/active-posts/active-posts.component';\nimport { InactivePostsComponent } from './components/inactive-posts/inactive-posts.component';\nimport { PostCardComponent } from './components/post-card/post-card.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { Error404Component } from './components/error404/error404.component';\nimport { HighlightDirective } from './directives/highlight.directive';\nimport { UsersComponent } from './components/users/users.component';\nimport { UserDetailsComponent } from './components/user-details/user-details.component';\nimport { EllipsisPipe } from './pipes/ellipsis.pipe';\nimport { PostDetailsComponent } from './components/post-details/post-details.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { RegisterComponent } from './auth/register/register.component';\nimport { TokenInterceptor } from './auth/token.interceptor';\nimport { AuthGuard } from './auth/auth.guard';\nimport { NewPostComponent } from './components/new-post/new-post.component';\n\nconst routes: Route[] = [\n    {\n        path: '',\n        component: HomeComponent,\n    },\n    {\n        path: 'activePosts',\n        component: ActivePostsComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'inactivePosts',\n        component: InactivePostsComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'activePosts/:id',\n        component: PostDetailsComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'inactivePosts/:id',\n        component: PostDetailsComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'newPost',\n        component: NewPostComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'users',\n        component: UsersComponent,\n        canActivate: [AuthGuard],\n        children: [\n            {\n                path: ':id',\n                component: UserDetailsComponent,\n            },\n        ],\n    },\n    {\n        path: 'login',\n        component: LoginComponent,\n    },\n    {\n        path: 'register',\n        component: RegisterComponent,\n    },\n    {\n        path: '**',\n        component: Error404Component,\n    },\n];\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        HeaderComponent,\n        NavbarComponent,\n        ActivePostsComponent,\n        InactivePostsComponent,\n        PostCardComponent,\n        HomeComponent,\n        HighlightDirective,\n        UsersComponent,\n        UserDetailsComponent,\n        EllipsisPipe,\n        PostDetailsComponent,\n        LoginComponent,\n        RegisterComponent,\n        NewPostComponent,\n    ],\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n        RouterModule.forRoot(routes),\n        FormsModule,\n        ReactiveFormsModule,\n    ],\n    providers: [\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: TokenInterceptor,\n            multi: true\n        }\n    ],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthData.html":{"url":"interfaces/AuthData.html","title":"interface - AuthData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/auth-data.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AuthData {\n    accessToken: string,\n    user: {\n        name: string,\n        id: string,\n        email: string\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authSrv: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.guard.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authSrv\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.guard.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise | boolean | UrlTree\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    RouterStateSnapshot,\n    UrlTree,\n    Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\nimport { take, map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n    constructor(private authSrv: AuthService, private router: Router) {}\n    canActivate(\n        route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot\n    ):\n        | Observable\n        | Promise\n        | boolean\n        | UrlTree {\n        return this.authSrv.user$.pipe(\n            take(1),\n            map((user) => {\n                if (user) {\n                    return true;\n                }\n                alert('Devi essere loggato per visualizzare questa risorsa!');\n                return this.router.createUrlTree(['/login']);\n            })\n        );\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiURL\n                            \n                            \n                                    Private\n                                authSub\n                            \n                            \n                                jwtHelper\n                            \n                            \n                                timeOut\n                            \n                            \n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                autoLogout\n                            \n                            \n                                    Private\n                                errors\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                restore\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        autoLogout\n                        \n                    \n                \n            \n            \n                \nautoLogout(user: AuthData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            AuthData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        errors\n                        \n                    \n                \n            \n            \n                \n                        \n                    errors(err: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(data: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restore\n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signup\n                        \n                    \n                \n            \n            \n                \nsignup(data: Register)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Register\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiURL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiURL\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authSub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jwtHelper\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new JwtHelperService()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeOut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.authSub.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Register } from '../models/register.interface';\nimport { environment } from 'src/environments/environment.development';\nimport { BehaviorSubject, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { AuthData } from '../models/auth-data.interface';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthService {\n    apiURL = environment.apiURL;\n    jwtHelper = new JwtHelperService();\n\n    // elementi per gestire la procedura di login\n    private authSub = new BehaviorSubject(null);\n    user$ = this.authSub.asObservable();\n    timeOut: any;\n\n    constructor(private http: HttpClient, private router: Router) {}\n\n    login(data: { email: string; password: string }) {\n        return this.http.post(`${this.apiURL}login`, data).pipe(\n            tap((data) => {\n                console.log('Auth data: ', data);\n            }),\n            tap((data) => {\n                this.authSub.next(data);\n                localStorage.setItem('user', JSON.stringify(data));\n                this.autoLogout(data);\n            }),\n            catchError(this.errors)\n        );\n    }\n\n    signup(data: Register) {\n        return this.http\n            .post(`${this.apiURL}register`, data)\n            .pipe(catchError(this.errors));\n    }\n\n    logout() {\n        this.authSub.next(null);\n        localStorage.removeItem('user');\n        this.router.navigate(['/login']);\n    }\n\n    restore() {\n        const userJson = localStorage.getItem('user');\n        if (!userJson) {\n            return;\n        }\n        const user: AuthData = JSON.parse(userJson);\n        this.authSub.next(user);\n        this.autoLogout(user);\n    }\n\n    autoLogout(user: AuthData) {\n        const dateExpiration = this.jwtHelper.getTokenExpirationDate(user.accessToken) as Date;\n        const millisecondsExp = dateExpiration.getTime() - new Date().getTime();\n        this.timeOut = setTimeout(() => {\n            this.logout();\n        }, millisecondsExp);\n    }\n\n    private errors(err: any) {\n        console.log(err.error);\n        switch (err.error) {\n            case 'Email already exists':\n                return throwError('utente già presente');\n                break;\n\n            case 'Incorrect password':\n                return throwError('password errata');\n                break;\n\n            case 'Cannot find user':\n                return throwError('Utente non trovato');\n                break;\n\n            default:\n                return throwError('Errore nella chiamata');\n                break;\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/EllipsisPipe.html":{"url":"pipes/EllipsisPipe.html","title":"pipe - EllipsisPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  EllipsisPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/ellipsis.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        ellipsis\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pipes/ellipsis.pipe.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'ellipsis',\n})\nexport class EllipsisPipe implements PipeTransform {\n    transform(value: string): string {\n        return value.slice(0, 10) + '...';\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Error404Component.html":{"url":"components/Error404Component.html","title":"component - Error404Component","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Error404Component\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/error404/error404.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error404\n            \n\n\n\n            \n                styleUrls\n                ./error404.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./error404.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-error404',\n  templateUrl: './error404.component.html',\n  styleUrls: ['./error404.component.scss']\n})\nexport class Error404Component {\n\n}\n\n    \n\n    \n        Contenuto non trovato\n\n    \n\n\n    \n\n    \n                \n                    ./error404.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Contenuto non trovato    '\n    var COMPONENTS = [{'name': 'ActivePostsComponent', 'selector': 'app-active-posts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'Error404Component', 'selector': 'app-error404'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InactivePostsComponent', 'selector': 'app-inactive-posts'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NewPostComponent', 'selector': 'app-new-post'},{'name': 'PostCardComponent', 'selector': 'app-post-card'},{'name': 'PostDetailsComponent', 'selector': 'app-post-details'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'HighlightDirective', 'selector': '[appHighlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'Error404Component'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n\n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n\n}\n\n    \n\n    \n        \n    POSTS\n    \n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                header {\n    height: 100px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    POSTS    '\n    var COMPONENTS = [{'name': 'ActivePostsComponent', 'selector': 'app-active-posts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'Error404Component', 'selector': 'app-error404'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InactivePostsComponent', 'selector': 'app-inactive-posts'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NewPostComponent', 'selector': 'app-new-post'},{'name': 'PostCardComponent', 'selector': 'app-post-card'},{'name': 'PostDetailsComponent', 'selector': 'app-post-details'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'HighlightDirective', 'selector': '[appHighlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/HighlightDirective.html":{"url":"directives/HighlightDirective.html","title":"directive - HighlightDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  HighlightDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/highlight.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appHighlight]\n                    \n\n\n\n\n                \n            \n        \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(target: ElementRef, render: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/highlight.directive.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        render\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, Renderer2 } from '@angular/core';\n\n@Directive({\n    selector: '[appHighlight]',\n})\nexport class HighlightDirective {\n    constructor(private target: ElementRef, private render: Renderer2) {\n        this.render.setStyle(this.target.nativeElement, 'backgroundColor', 'red');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/home/home.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n\n}\n\n    \n\n    \n        \n    Lista post jsonPlaceHolder style\n    \n        \n            \n                Vai ai post attivi\n            \n            \n                Vai ai post non attivi\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Lista post jsonPlaceHolder style                                        Vai ai post attivi                                        Vai ai post non attivi                        '\n    var COMPONENTS = [{'name': 'ActivePostsComponent', 'selector': 'app-active-posts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'Error404Component', 'selector': 'app-error404'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InactivePostsComponent', 'selector': 'app-inactive-posts'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NewPostComponent', 'selector': 'app-new-post'},{'name': 'PostCardComponent', 'selector': 'app-post-card'},{'name': 'PostDetailsComponent', 'selector': 'app-post-details'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'HighlightDirective', 'selector': '[appHighlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InactivePostsComponent.html":{"url":"components/InactivePostsComponent.html","title":"component - InactivePostsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InactivePostsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/inactive-posts/inactive-posts.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-inactive-posts\n            \n\n\n\n            \n                styleUrls\n                ./inactive-posts.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./inactive-posts.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                posts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deletePost\n                            \n                            \n                                enablePost\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(postSrv: PostService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/inactive-posts/inactive-posts.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postSrv\n                                                  \n                                                        \n                                                                        PostService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deletePost\n                        \n                    \n                \n            \n            \n                \ndeletePost(id: number, index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/inactive-posts/inactive-posts.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enablePost\n                        \n                    \n                \n            \n            \n                \nenablePost(id: number, index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/inactive-posts/inactive-posts.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/inactive-posts/inactive-posts.component.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        posts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Post[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/inactive-posts/inactive-posts.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Post } from 'src/app/models/post.interface';\nimport { PostService } from 'src/app/service/post.service';\n\n@Component({\n    selector: 'app-inactive-posts',\n    templateUrl: './inactive-posts.component.html',\n    styleUrls: ['./inactive-posts.component.scss'],\n})\nexport class InactivePostsComponent {\n    posts!: Post[];\n\n    constructor(private postSrv: PostService) {}\n\n    ngOnInit() {\n        console.log('ngOnInit attivato');\n        this.postSrv.getPosts().subscribe((data) => {\n            this.posts = data;\n        });\n    }\n\n    enablePost(id: number, index: number) {\n        this.postSrv.updatePost(id, { completed: true }).subscribe();\n        this.posts.splice(index, 1);\n    }\n\n    deletePost(id: number, index: number) {\n        this.postSrv.deletePost(id).subscribe();\n        this.posts.splice(index, 1);\n    }\n}\n\n    \n\n    \n        \n    Post non attivi\n    \n        \n            \n                \n                    \n                        \n                        \n                            \n                                ATTIVA\n                            \n                            \n                                DETTAGLI\n                            \n                            \n                                🗑️\n                            \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./inactive-posts.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Post non attivi                                                                                                                                                                        ATTIVA                                                                                        DETTAGLI                                                                                        🗑️                                                                                                                '\n    var COMPONENTS = [{'name': 'ActivePostsComponent', 'selector': 'app-active-posts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'Error404Component', 'selector': 'app-error404'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InactivePostsComponent', 'selector': 'app-inactive-posts'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NewPostComponent', 'selector': 'app-new-post'},{'name': 'PostCardComponent', 'selector': 'app-post-card'},{'name': 'PostDetailsComponent', 'selector': 'app-post-details'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'HighlightDirective', 'selector': '[appHighlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'InactivePostsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authSrv: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login/login.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authSrv\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(form: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/login/login.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent {\n    constructor(private authSrv: AuthService, private router: Router) {}\n\n    login(form: NgForm) {\n        console.log(form.value);\n        try {\n            this.authSrv.login(form.value).subscribe();\n            this.router.navigate(['/']);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n}\n\n    \n\n    \n        \n    Login\n\n\n    \n        \n            Email\n            \n            Password\n            \n        \n        Accedi\n    \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Login                        Email                        Password                            Accedi    '\n    var COMPONENTS = [{'name': 'ActivePostsComponent', 'selector': 'app-active-posts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'Error404Component', 'selector': 'app-error404'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InactivePostsComponent', 'selector': 'app-inactive-posts'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NewPostComponent', 'selector': 'app-new-post'},{'name': 'PostCardComponent', 'selector': 'app-post-card'},{'name': 'PostDetailsComponent', 'selector': 'app-post-details'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'HighlightDirective', 'selector': '[appHighlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n\n\n            \n                styleUrls\n                ./navbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authSrv: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/navbar.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authSrv\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/navbar/navbar.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/navbar/navbar.component.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthData | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthData } from 'src/app/models/auth-data.interface';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n    user!: AuthData | null;\n\n    constructor(private authSrv: AuthService) {}\n\n    ngOnInit(): void {\n        this.authSrv.user$.subscribe((user) => {\n            this.user = user;\n        });\n    }\n\n    logout() {\n        this.authSrv.logout();\n    }\n\n}\n\n    \n\n    \n        \n    \n        PostApp\n        \n            \n        \n        \n            \n                \n                    Home\n                \n                \n                    Post attivi\n                \n                \n                    Post non attivi\n                \n                \n                    Crea nuovo post\n                \n                \n                    Lista utenti\n                \n                \n                    Login\n                \n                \n                    Registrati\n                \n            \n        \n    \n    \n        Benvenuto {{ user.user.name }}\n    \n    \n        Logout\n    \n\n\n    \n\n    \n                \n                    ./navbar.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            PostApp                                                                                    Home                                                    Post attivi                                                    Post non attivi                                                    Crea nuovo post                                                    Lista utenti                                                    Login                                                    Registrati                                                    Benvenuto {{ user.user.name }}                Logout    '\n    var COMPONENTS = [{'name': 'ActivePostsComponent', 'selector': 'app-active-posts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'Error404Component', 'selector': 'app-error404'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InactivePostsComponent', 'selector': 'app-inactive-posts'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NewPostComponent', 'selector': 'app-new-post'},{'name': 'PostCardComponent', 'selector': 'app-post-card'},{'name': 'PostDetailsComponent', 'selector': 'app-post-details'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'HighlightDirective', 'selector': '[appHighlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewPostComponent.html":{"url":"components/NewPostComponent.html","title":"component - NewPostComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NewPostComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/new-post/new-post.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-new-post\n            \n\n\n\n            \n                styleUrls\n                ./new-post.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./new-post.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                arrayUsers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(postSrv: PostService, userSrv: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/new-post/new-post.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postSrv\n                                                  \n                                                        \n                                                                        PostService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userSrv\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/new-post/new-post.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave(form: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/new-post/new-post.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        arrayUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/new-post/new-post.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { PostService } from 'src/app/service/post.service';\nimport { Post } from 'src/app/models/post.interface';\nimport { NgForm } from '@angular/forms';\nimport { UserService } from 'src/app/service/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-new-post',\n    templateUrl: './new-post.component.html',\n    styleUrls: ['./new-post.component.scss'],\n})\nexport class NewPostComponent implements OnInit {\n\n    arrayUsers: any[] = [];\n\n    constructor(private postSrv: PostService, private userSrv: UserService, private router: Router) {}\n\n    ngOnInit(): void {\n        this.userSrv.getUsers().subscribe((data) => {\n            this.arrayUsers = data;\n        });\n    }\n\n    save(form: NgForm) {\n        this.postSrv.newPost(form.value).subscribe();\n        this.router.navigate(['/']);\n    }\n}\n\n    \n\n    \n        \n    \n        Titolo\n        \n        Completato\n        \n        \n        Autore\n        \n            \n            {{ user.name }}\n        \n        Invia\n    \n\n\n    \n\n    \n                \n                    ./new-post.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Titolo                Completato                        Autore                                {{ user.name }}                Invia    '\n    var COMPONENTS = [{'name': 'ActivePostsComponent', 'selector': 'app-active-posts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'Error404Component', 'selector': 'app-error404'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InactivePostsComponent', 'selector': 'app-inactive-posts'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NewPostComponent', 'selector': 'app-new-post'},{'name': 'PostCardComponent', 'selector': 'app-post-card'},{'name': 'PostDetailsComponent', 'selector': 'app-post-details'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'HighlightDirective', 'selector': '[appHighlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'NewPostComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Post.html":{"url":"interfaces/Post.html","title":"interface - Post","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Post\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/post.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            completed\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        completed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Post {\n    userId: number,\n    title: string,\n    id: number,\n    completed: boolean\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostCardComponent.html":{"url":"components/PostCardComponent.html","title":"component - PostCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PostCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/post-card/post-card.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-post-card\n            \n\n\n\n            \n                styleUrls\n                ./post-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./post-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                post\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        post\n                    \n                \n                \n                    \n                        Type :         Post\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/post-card/post-card.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Post } from 'src/app/models/post.interface';\n\n@Component({\n    selector: 'app-post-card',\n    templateUrl: './post-card.component.html',\n    styleUrls: ['./post-card.component.scss'],\n})\nexport class PostCardComponent {\n    @Input('post') post!: Post; // Il componente, figlio sia di active post che di inactive post, aspetta di ricevere in input dai padri un elemento di tipo Post\n}\n\n    \n\n    \n        \nPost id {{ post.id }}\n\n    {{ post.title | ellipsis }}\n    \n\n\n    \n\n    \n                \n                    ./post-card.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Post id {{ post.id }}    {{ post.title | ellipsis }}    '\n    var COMPONENTS = [{'name': 'ActivePostsComponent', 'selector': 'app-active-posts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'Error404Component', 'selector': 'app-error404'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InactivePostsComponent', 'selector': 'app-inactive-posts'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NewPostComponent', 'selector': 'app-new-post'},{'name': 'PostCardComponent', 'selector': 'app-post-card'},{'name': 'PostDetailsComponent', 'selector': 'app-post-details'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'HighlightDirective', 'selector': '[appHighlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'PostCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostDetailsComponent.html":{"url":"components/PostDetailsComponent.html","title":"component - PostDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PostDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/post-details/post-details.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-post-details\n            \n\n\n\n            \n                styleUrls\n                ./post-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./post-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                post\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(postSrv: PostService, router: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/post-details/post-details.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postSrv\n                                                  \n                                                        \n                                                                        PostService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/post-details/post-details.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        post\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Post\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/post-details/post-details.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Post } from 'src/app/models/post.interface';\nimport { PostService } from 'src/app/service/post.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n    selector: 'app-post-details',\n    templateUrl: './post-details.component.html',\n    styleUrls: ['./post-details.component.scss'],\n})\nexport class PostDetailsComponent implements OnInit {\n    post!: Post;\n\n    constructor(private postSrv: PostService, private router: ActivatedRoute) {}\n\n    ngOnInit(): void {\n        this.router.params.subscribe((params) => {\n            const id = +params['id'];\n            this.postSrv.getPost(id).subscribe((data) => {\n                this.post = data;\n            });\n        });\n    }\n}\n\n    \n\n    \n        \n    \n        Post numero {{ post.id }}\n        {{ post.title }}\n        \n            Post attivo\n        \n    \n    \n        Post non trovato\n    \n    \n        Post non attivo\n    \n\n\n    \n\n    \n                \n                    ./post-details.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Post numero {{ post.id }}        {{ post.title }}                    Post attivo                        Post non trovato                Post non attivo    '\n    var COMPONENTS = [{'name': 'ActivePostsComponent', 'selector': 'app-active-posts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'Error404Component', 'selector': 'app-error404'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InactivePostsComponent', 'selector': 'app-inactive-posts'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NewPostComponent', 'selector': 'app-new-post'},{'name': 'PostCardComponent', 'selector': 'app-post-card'},{'name': 'PostDetailsComponent', 'selector': 'app-post-details'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'HighlightDirective', 'selector': '[appHighlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'PostDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostService.html":{"url":"injectables/PostService.html","title":"injectable - PostService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/post.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deletePost\n                            \n                            \n                                getPost\n                            \n                            \n                                getPosts\n                            \n                            \n                                newPost\n                            \n                            \n                                updatePost\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/post.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deletePost\n                        \n                    \n                \n            \n            \n                \ndeletePost(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/post.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPost\n                        \n                    \n                \n            \n            \n                \ngetPost(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/post.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPosts\n                        \n                    \n                \n            \n            \n                \ngetPosts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/post.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newPost\n                        \n                    \n                \n            \n            \n                \nnewPost(data: Post)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/post.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Post\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePost\n                        \n                    \n                \n            \n            \n                \nupdatePost(id: number, data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/post.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiURL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiURL\n                    \n                \n                    \n                        \n                                Defined in src/app/service/post.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Post } from '../models/post.interface';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.development';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PostService {\n\n    apiURL = environment.apiURL;\n\n    constructor(private http: HttpClient) {}\n\n    getPosts() {\n        return this.http.get(`${this.apiURL}posts`);\n    }\n\n    getPost(id: number) {\n        return this.http.get(`${this.apiURL}posts/${id}`);\n    }\n\n    newPost(data: Post) {\n        return this.http.post(`${this.apiURL}posts`, data);\n    }\n\n    updatePost(id: number, data: Partial) {\n        return this.http.patch(`${this.apiURL}posts/${id}`, data);\n    }\n\n    deletePost(id: number) {\n        return this.http.delete(`${this.apiURL}posts/${id}`);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Register.html":{"url":"interfaces/Register.html","title":"interface - Register","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Register\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/register.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Register {\n    name: string,\n    email: string,\n    password: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/register/register.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authSrv: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/register/register.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authSrv\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(form: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/register/register.component.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-register',\n    templateUrl: './register.component.html',\n    styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent {\n\n    constructor(private authSrv: AuthService, private router: Router) {}\n\n    onSubmit(form: NgForm) {\n        console.log(form.value);\n        try {\n            this.authSrv.signup(form.value).subscribe();\n            this.router.navigate(['/login']);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n}\n\n    \n\n    \n        \n    Registrati\n\n\n    \n        \n            Nome completo\n            \n            Email\n            \n            Password\n            \n        \n        Registrati\n    \n\n\n    \n\n    \n                \n                    ./register.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Registrati                        Nome completo                        Email                        Password                            Registrati    '\n    var COMPONENTS = [{'name': 'ActivePostsComponent', 'selector': 'app-active-posts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'Error404Component', 'selector': 'app-error404'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InactivePostsComponent', 'selector': 'app-inactive-posts'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NewPostComponent', 'selector': 'app-new-post'},{'name': 'PostCardComponent', 'selector': 'app-post-card'},{'name': 'PostDetailsComponent', 'selector': 'app-post-details'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'HighlightDirective', 'selector': '[appHighlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TokenInterceptor.html":{"url":"interceptors/TokenInterceptor.html","title":"interceptor - TokenInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  TokenInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/token.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authSrv: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/token.interceptor.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authSrv\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/token.interceptor.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n    HttpRequest,\n    HttpHandler,\n    HttpEvent,\n    HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\nimport { switchMap, take } from 'rxjs/operators';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n    constructor(private authSrv: AuthService) {}\n\n    intercept(\n        request: HttpRequest,\n        next: HttpHandler\n    ): Observable> {\n        return this.authSrv.user$.pipe(\n            take(1),\n            switchMap(user => {\n                if (user) {\n                    const newReq = request.clone({\n                        headers: request.headers.append('Authorization', `Bearer ${user.accessToken}`)\n                    });\n                    console.log(newReq);\n                    return next.handle(newReq);\n                } else {\n                    return next.handle(request);\n                }\n            })\n        );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     \"admin\" | \"user\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"admin\" | \"user\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n    id: number,\n    name: string,\n    email: string,\n    role: 'admin' | 'user'\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserDetailsComponent.html":{"url":"components/UserDetailsComponent.html","title":"component - UserDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/user-details/user-details.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-details\n            \n\n\n\n            \n                styleUrls\n                ./user-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userSrv: UserService, router: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/user-details/user-details.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userSrv\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-details/user-details.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-details/user-details.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/models/user.interface';\nimport { UserService } from 'src/app/service/user.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n    selector: 'app-user-details',\n    templateUrl: './user-details.component.html',\n    styleUrls: ['./user-details.component.scss'],\n})\nexport class UserDetailsComponent implements OnInit {\n    user!: User;\n\n    constructor(private userSrv: UserService, private router: ActivatedRoute) {}\n\n    ngOnInit(): void {\n        this.router.params.subscribe((params) => {\n            const id = +params['id'];\n            this.userSrv.getUser(id).subscribe((data) => {\n                this.user = data;\n            });\n        });\n    }\n}\n\n    \n\n    \n        \n    {{ user.name }}\n    Email: {{ user.email }}\n    Ruolo: {{ user.role }}\n\n\n    Utente non trovato\n\n\n    \n\n    \n                \n                    ./user-details.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ user.name }}    Email: {{ user.email }}    Ruolo: {{ user.role }}    Utente non trovato'\n    var COMPONENTS = [{'name': 'ActivePostsComponent', 'selector': 'app-active-posts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'Error404Component', 'selector': 'app-error404'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InactivePostsComponent', 'selector': 'app-inactive-posts'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NewPostComponent', 'selector': 'app-new-post'},{'name': 'PostCardComponent', 'selector': 'app-post-card'},{'name': 'PostDetailsComponent', 'selector': 'app-post-details'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'HighlightDirective', 'selector': '[appHighlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUser\n                            \n                            \n                                getUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/user.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/user.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/user.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiURL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiURL\n                    \n                \n                    \n                        \n                                Defined in src/app/service/user.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { User } from '../models/user.interface';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.development';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserService {\n    apiURL = environment.apiURL;\n\n    constructor(private http: HttpClient) {}\n\n    getUsers() {\n        return this.http.get(`${this.apiURL}utenti`);\n    }\n\n    getUser(id: number) {\n        return this.http.get(`${this.apiURL}utenti/${id}`);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersComponent.html":{"url":"components/UsersComponent.html","title":"component - UsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/users/users.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users\n            \n\n\n\n            \n                styleUrls\n                ./users.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./users.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userSrv: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/users/users.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userSrv\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/users/users.component.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/users/users.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/models/user.interface';\nimport { UserService } from 'src/app/service/user.service';\n\n@Component({\n    selector: 'app-users',\n    templateUrl: './users.component.html',\n    styleUrls: ['./users.component.scss'],\n})\nexport class UsersComponent implements OnInit {\n    users: User[] = [];\n\n    constructor(private userSrv: UserService) {}\n\n    ngOnInit(): void {\n        this.userSrv.getUsers().subscribe((data) => {\n            this.users = data;\n        });\n    }\n}\n\n    \n\n    \n        \n    \n        \n        {{ user.name }}\n    \n    \n    \n\n\n    \n\n    \n                \n                    ./users.component.scss\n                \n                .list-group li {\n    cursor: pointer;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ user.name }}            '\n    var COMPONENTS = [{'name': 'ActivePostsComponent', 'selector': 'app-active-posts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'Error404Component', 'selector': 'app-error404'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InactivePostsComponent', 'selector': 'app-inactive-posts'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NewPostComponent', 'selector': 'app-new-post'},{'name': 'PostCardComponent', 'selector': 'app-post-card'},{'name': 'PostDetailsComponent', 'selector': 'app-post-details'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'HighlightDirective', 'selector': '[appHighlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'UsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            routes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/token.interceptor.ts\n            \n            interceptor\n            TokenInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/active-posts/active-posts.component.ts\n            \n            component\n            ActivePostsComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/error404/error404.component.ts\n            \n            component\n            Error404Component\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/inactive-posts/inactive-posts.component.ts\n            \n            component\n            InactivePostsComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/new-post/new-post.component.ts\n            \n            component\n            NewPostComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/post-card/post-card.component.ts\n            \n            component\n            PostCardComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/post-details/post-details.component.ts\n            \n            component\n            PostDetailsComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/user-details/user-details.component.ts\n            \n            component\n            UserDetailsComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/users/users.component.ts\n            \n            component\n            UsersComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/directives/highlight.directive.ts\n            \n            directive\n            HighlightDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/models/auth-data.interface.ts\n            \n            interface\n            AuthData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/post.interface.ts\n            \n            interface\n            Post\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/register.interface.ts\n            \n            interface\n            Register\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/user.interface.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/pipes/ellipsis.pipe.ts\n            \n            pipe\n            EllipsisPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/service/post.service.ts\n            \n            injectable\n            PostService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/service/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.2.0\n        \n            @angular/common : ^16.2.0\n        \n            @angular/compiler : ^16.2.0\n        \n            @angular/core : ^16.2.0\n        \n            @angular/forms : ^16.2.0\n        \n            @angular/platform-browser : ^16.2.0\n        \n            @angular/platform-browser-dynamic : ^16.2.0\n        \n            @angular/router : ^16.2.0\n        \n            @auth0/angular-jwt : ^5.2.0\n        \n            concurrently : ^8.2.2\n        \n            json-server : ^0.17.4\n        \n            json-server-auth : ^2.1.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPostApp\nThis project was generated with Angular CLI version 16.2.11.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nActivePostsComponent\n\nActivePostsComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nActivePostsComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nEllipsisPipe\n\nEllipsisPipe\n\nAppModule -->\n\nEllipsisPipe->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHighlightDirective\n\nHighlightDirective\n\nAppModule -->\n\nHighlightDirective->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nInactivePostsComponent\n\nInactivePostsComponent\n\nAppModule -->\n\nInactivePostsComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nNewPostComponent\n\nNewPostComponent\n\nAppModule -->\n\nNewPostComponent->AppModule\n\n\n\n\n\nPostCardComponent\n\nPostCardComponent\n\nAppModule -->\n\nPostCardComponent->AppModule\n\n\n\n\n\nPostDetailsComponent\n\nPostDetailsComponent\n\nAppModule -->\n\nPostDetailsComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nUserDetailsComponent\n\nUserDetailsComponent\n\nAppModule -->\n\nUserDetailsComponent->AppModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nAppModule -->\n\nUsersComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nTokenInterceptor\n\nTokenInterceptor\n\nAppModule -->\n\nTokenInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            routes   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: false,\n    apiURL: 'http://localhost:4201/'\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: true,\n    apiURL: 'http://localhost:4201/'\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Route[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n        path: '',\n        component: HomeComponent,\n    },\n    {\n        path: 'activePosts',\n        component: ActivePostsComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'inactivePosts',\n        component: InactivePostsComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'activePosts/:id',\n        component: PostDetailsComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'inactivePosts/:id',\n        component: PostDetailsComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'newPost',\n        component: NewPostComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'users',\n        component: UsersComponent,\n        canActivate: [AuthGuard],\n        children: [\n            {\n                path: ':id',\n                component: UserDetailsComponent,\n            },\n        ],\n    },\n    {\n        path: 'login',\n        component: LoginComponent,\n    },\n    {\n        path: 'register',\n        component: RegisterComponent,\n    },\n    {\n        path: '**',\n        component: Error404Component,\n    },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
